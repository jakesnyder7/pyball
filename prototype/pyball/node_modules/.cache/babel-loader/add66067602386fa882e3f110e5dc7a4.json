{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/@babel/runtime/regenerator/index.js\");\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) : typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) : (global = global || self, factory(global.ReactTable = {}, global.React));\n})(this, function (exports, React) {\n  'use strict';\n\n  React = React && Object.prototype.hasOwnProperty.call(React, 'default') ? React['default'] : React;\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n      var info = gen[key](arg);\n      var value = info.value;\n    } catch (error) {\n      reject(error);\n      return;\n    }\n\n    if (info.done) {\n      resolve(value);\n    } else {\n      Promise.resolve(value).then(_next, _throw);\n    }\n  }\n\n  function _asyncToGenerator(fn) {\n    return function () {\n      var self = this,\n          args = arguments;\n      return new Promise(function (resolve, reject) {\n        var gen = fn.apply(self, args);\n\n        function _next(value) {\n          asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n        }\n\n        function _throw(err) {\n          asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n        }\n\n        _next(undefined);\n      });\n    };\n  }\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  function _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n\n    return (hint === \"string\" ? String : Number)(input);\n  }\n\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n\n  var renderErr = 'Renderer Error ☝️';\n  var actions = {\n    init: 'init'\n  };\n\n  var defaultRenderer = function defaultRenderer(_ref) {\n    var _ref$value = _ref.value,\n        value = _ref$value === void 0 ? '' : _ref$value;\n    return value;\n  };\n\n  var emptyRenderer = function emptyRenderer() {\n    return React.createElement(React.Fragment, null, \"\\xA0\");\n  };\n\n  var defaultColumn = {\n    Cell: defaultRenderer,\n    width: 150,\n    minWidth: 0,\n    maxWidth: Number.MAX_SAFE_INTEGER\n  };\n\n  function mergeProps() {\n    for (var _len = arguments.length, propList = new Array(_len), _key = 0; _key < _len; _key++) {\n      propList[_key] = arguments[_key];\n    }\n\n    return propList.reduce(function (props, next) {\n      var style = next.style,\n          className = next.className,\n          rest = _objectWithoutPropertiesLoose(next, [\"style\", \"className\"]);\n\n      props = _extends({}, props, {}, rest);\n\n      if (style) {\n        props.style = props.style ? _extends({}, props.style || {}, {}, style || {}) : style;\n      }\n\n      if (className) {\n        props.className = props.className ? props.className + ' ' + className : className;\n      }\n\n      if (props.className === '') {\n        delete props.className;\n      }\n\n      return props;\n    }, {});\n  }\n\n  function handlePropGetter(prevProps, userProps, meta) {\n    // Handle a lambda, pass it the previous props\n    if (typeof userProps === 'function') {\n      return handlePropGetter({}, userProps(prevProps, meta));\n    } // Handle an array, merge each item as separate props\n\n\n    if (Array.isArray(userProps)) {\n      return mergeProps.apply(void 0, [prevProps].concat(userProps));\n    } // Handle an object by default, merge the two objects\n\n\n    return mergeProps(prevProps, userProps);\n  }\n\n  var makePropGetter = function makePropGetter(hooks, meta) {\n    if (meta === void 0) {\n      meta = {};\n    }\n\n    return function (userProps) {\n      if (userProps === void 0) {\n        userProps = {};\n      }\n\n      return [].concat(hooks, [userProps]).reduce(function (prev, next) {\n        return handlePropGetter(prev, next, _extends({}, meta, {\n          userProps: userProps\n        }));\n      }, {});\n    };\n  };\n\n  var reduceHooks = function reduceHooks(hooks, initial, meta, allowUndefined) {\n    if (meta === void 0) {\n      meta = {};\n    }\n\n    return hooks.reduce(function (prev, next) {\n      var nextValue = next(prev, meta);\n      {\n        if (!allowUndefined && typeof nextValue === 'undefined') {\n          console.info(next);\n          throw new Error('React Table: A reducer hook ☝️ just returned undefined! This is not allowed.');\n        }\n      }\n      return nextValue;\n    }, initial);\n  };\n\n  var loopHooks = function loopHooks(hooks, context, meta) {\n    if (meta === void 0) {\n      meta = {};\n    }\n\n    return hooks.forEach(function (hook) {\n      var nextValue = hook(context, meta);\n      {\n        if (typeof nextValue !== 'undefined') {\n          console.info(hook, nextValue);\n          throw new Error('React Table: A loop-type hook ☝️ just returned a value! This is not allowed.');\n        }\n      }\n    });\n  };\n\n  function ensurePluginOrder(plugins, befores, pluginName, afters) {\n    if (afters) {\n      throw new Error(\"Defining plugins in the \\\"after\\\" section of ensurePluginOrder is no longer supported (see plugin \" + pluginName + \")\");\n    }\n\n    var pluginIndex = plugins.findIndex(function (plugin) {\n      return plugin.pluginName === pluginName;\n    });\n\n    if (pluginIndex === -1) {\n      {\n        throw new Error(\"The plugin \\\"\" + pluginName + \"\\\" was not found in the plugin list!\\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\\n\\n  \" + pluginName + \".pluginName = '\" + pluginName + \"'\\n\");\n      }\n    }\n\n    befores.forEach(function (before) {\n      var beforeIndex = plugins.findIndex(function (plugin) {\n        return plugin.pluginName === before;\n      });\n\n      if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n        {\n          throw new Error(\"React Table: The \" + pluginName + \" plugin hook must be placed after the \" + before + \" plugin hook!\");\n        }\n      }\n    });\n  }\n\n  function functionalUpdate(updater, old) {\n    return typeof updater === 'function' ? updater(old) : updater;\n  }\n\n  function useGetLatest(obj) {\n    var ref = React.useRef();\n    ref.current = obj;\n    return React.useCallback(function () {\n      return ref.current;\n    }, []);\n  } // SSR has issues with useLayoutEffect still, so use useEffect during SSR\n\n\n  var safeUseLayoutEffect = typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\n  function useMountedLayoutEffect(fn, deps) {\n    var mountedRef = React.useRef(false);\n    safeUseLayoutEffect(function () {\n      if (mountedRef.current) {\n        fn();\n      }\n\n      mountedRef.current = true; // eslint-disable-next-line\n    }, deps);\n  }\n\n  function useAsyncDebounce(defaultFn, defaultWait) {\n    if (defaultWait === void 0) {\n      defaultWait = 0;\n    }\n\n    var debounceRef = React.useRef({});\n    var getDefaultFn = useGetLatest(defaultFn);\n    var getDefaultWait = useGetLatest(defaultWait);\n    return React.useCallback( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _len2,\n            args,\n            _key2,\n            _args2 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                for (_len2 = _args2.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = _args2[_key2];\n                }\n\n                if (!debounceRef.current.promise) {\n                  debounceRef.current.promise = new Promise(function (resolve, reject) {\n                    debounceRef.current.resolve = resolve;\n                    debounceRef.current.reject = reject;\n                  });\n                }\n\n                if (debounceRef.current.timeout) {\n                  clearTimeout(debounceRef.current.timeout);\n                }\n\n                debounceRef.current.timeout = setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          delete debounceRef.current.timeout;\n                          _context.prev = 1;\n                          _context.t0 = debounceRef.current;\n                          _context.next = 5;\n                          return getDefaultFn().apply(void 0, args);\n\n                        case 5:\n                          _context.t1 = _context.sent;\n\n                          _context.t0.resolve.call(_context.t0, _context.t1);\n\n                          _context.next = 12;\n                          break;\n\n                        case 9:\n                          _context.prev = 9;\n                          _context.t2 = _context[\"catch\"](1);\n                          debounceRef.current.reject(_context.t2);\n\n                        case 12:\n                          _context.prev = 12;\n                          delete debounceRef.current.promise;\n                          return _context.finish(12);\n\n                        case 15:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, null, [[1, 9, 12, 15]]);\n                })), getDefaultWait());\n                return _context2.abrupt(\"return\", debounceRef.current.promise);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function () {\n        return _ref2.apply(this, arguments);\n      };\n    }(), [getDefaultFn, getDefaultWait]);\n  }\n\n  function makeRenderer(instance, column, meta) {\n    if (meta === void 0) {\n      meta = {};\n    }\n\n    return function (type, userProps) {\n      if (userProps === void 0) {\n        userProps = {};\n      }\n\n      var Comp = typeof type === 'string' ? column[type] : type;\n\n      if (typeof Comp === 'undefined') {\n        console.info(column);\n        throw new Error(renderErr);\n      }\n\n      return flexRender(Comp, _extends({}, instance, {\n        column: column\n      }, meta, {}, userProps));\n    };\n  }\n\n  function flexRender(Comp, props) {\n    return isReactComponent(Comp) ? React.createElement(Comp, props) : Comp;\n  }\n\n  function isReactComponent(component) {\n    return isClassComponent(component) || typeof component === 'function' || isExoticComponent(component);\n  }\n\n  function isClassComponent(component) {\n    return typeof component === 'function' && function () {\n      var proto = Object.getPrototypeOf(component);\n      return proto.prototype && proto.prototype.isReactComponent;\n    }();\n  }\n\n  function isExoticComponent(component) {\n    return typeof component === 'object' && typeof component.$$typeof === 'symbol' && ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description);\n  }\n\n  function linkColumnStructure(columns, parent, depth) {\n    if (depth === void 0) {\n      depth = 0;\n    }\n\n    return columns.map(function (column) {\n      column = _extends({}, column, {\n        parent: parent,\n        depth: depth\n      });\n      assignColumnAccessor(column);\n\n      if (column.columns) {\n        column.columns = linkColumnStructure(column.columns, column, depth + 1);\n      }\n\n      return column;\n    });\n  }\n\n  function flattenColumns(columns) {\n    return flattenBy(columns, 'columns');\n  }\n\n  function assignColumnAccessor(column) {\n    // First check for string accessor\n    var id = column.id,\n        accessor = column.accessor,\n        Header = column.Header;\n\n    if (typeof accessor === 'string') {\n      id = id || accessor;\n      var accessorPath = accessor.split('.');\n\n      accessor = function accessor(row) {\n        return getBy(row, accessorPath);\n      };\n    }\n\n    if (!id && typeof Header === 'string' && Header) {\n      id = Header;\n    }\n\n    if (!id && column.columns) {\n      console.error(column);\n      throw new Error('A column ID (or unique \"Header\" value) is required!');\n    }\n\n    if (!id) {\n      console.error(column);\n      throw new Error('A column ID (or string accessor) is required!');\n    }\n\n    Object.assign(column, {\n      id: id,\n      accessor: accessor\n    });\n    return column;\n  }\n\n  function decorateColumn(column, userDefaultColumn) {\n    if (!userDefaultColumn) {\n      throw new Error();\n    }\n\n    Object.assign(column, _extends({\n      // Make sure there is a fallback header, just in case\n      Header: emptyRenderer,\n      Footer: emptyRenderer\n    }, defaultColumn, {}, userDefaultColumn, {}, column));\n    Object.assign(column, {\n      originalWidth: column.width\n    });\n    return column;\n  } // Build the header groups from the bottom up\n\n\n  function makeHeaderGroups(allColumns, defaultColumn, additionalHeaderProperties) {\n    if (additionalHeaderProperties === void 0) {\n      additionalHeaderProperties = function additionalHeaderProperties() {\n        return {};\n      };\n    }\n\n    var headerGroups = [];\n    var scanColumns = allColumns;\n    var uid = 0;\n\n    var getUID = function getUID() {\n      return uid++;\n    };\n\n    var _loop = function _loop() {\n      // The header group we are creating\n      var headerGroup = {\n        headers: []\n      }; // The parent columns we're going to scan next\n\n      var parentColumns = [];\n      var hasParents = scanColumns.some(function (d) {\n        return d.parent;\n      }); // Scan each column for parents\n\n      scanColumns.forEach(function (column) {\n        // What is the latest (last) parent column?\n        var latestParentColumn = [].concat(parentColumns).reverse()[0];\n        var newParent;\n\n        if (hasParents) {\n          // If the column has a parent, add it if necessary\n          if (column.parent) {\n            newParent = _extends({}, column.parent, {\n              originalId: column.parent.id,\n              id: column.parent.id + \"_\" + getUID(),\n              headers: [column]\n            }, additionalHeaderProperties(column));\n          } else {\n            // If other columns have parents, we'll need to add a place holder if necessary\n            var originalId = column.id + \"_placeholder\";\n            newParent = decorateColumn(_extends({\n              originalId: originalId,\n              id: column.id + \"_placeholder_\" + getUID(),\n              placeholderOf: column,\n              headers: [column]\n            }, additionalHeaderProperties(column)), defaultColumn);\n          } // If the resulting parent columns are the same, just add\n          // the column and increment the header span\n\n\n          if (latestParentColumn && latestParentColumn.originalId === newParent.originalId) {\n            latestParentColumn.headers.push(column);\n          } else {\n            parentColumns.push(newParent);\n          }\n        }\n\n        headerGroup.headers.push(column);\n      });\n      headerGroups.push(headerGroup); // Start scanning the parent columns\n\n      scanColumns = parentColumns;\n    };\n\n    while (scanColumns.length) {\n      _loop();\n    }\n\n    return headerGroups.reverse();\n  }\n\n  var pathObjCache = new Map();\n\n  function getBy(obj, path, def) {\n    if (!path) {\n      return obj;\n    }\n\n    var cacheKey = typeof path === 'function' ? path : JSON.stringify(path);\n\n    var pathObj = pathObjCache.get(cacheKey) || function () {\n      var pathObj = makePathArray(path);\n      pathObjCache.set(cacheKey, pathObj);\n      return pathObj;\n    }();\n\n    var val;\n\n    try {\n      val = pathObj.reduce(function (cursor, pathPart) {\n        return cursor[pathPart];\n      }, obj);\n    } catch (e) {// continue regardless of error\n    }\n\n    return typeof val !== 'undefined' ? val : def;\n  }\n\n  function getFirstDefined() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    for (var i = 0; i < args.length; i += 1) {\n      if (typeof args[i] !== 'undefined') {\n        return args[i];\n      }\n    }\n  }\n\n  function isFunction(a) {\n    if (typeof a === 'function') {\n      return a;\n    }\n  }\n\n  function flattenBy(arr, key) {\n    var flat = [];\n\n    var recurse = function recurse(arr) {\n      arr.forEach(function (d) {\n        if (!d[key]) {\n          flat.push(d);\n        } else {\n          recurse(d[key]);\n        }\n      });\n    };\n\n    recurse(arr);\n    return flat;\n  }\n\n  function expandRows(rows, _ref) {\n    var manualExpandedKey = _ref.manualExpandedKey,\n        expanded = _ref.expanded,\n        _ref$expandSubRows = _ref.expandSubRows,\n        expandSubRows = _ref$expandSubRows === void 0 ? true : _ref$expandSubRows;\n    var expandedRows = [];\n\n    var handleRow = function handleRow(row, addToExpandedRows) {\n      if (addToExpandedRows === void 0) {\n        addToExpandedRows = true;\n      }\n\n      row.isExpanded = row.original && row.original[manualExpandedKey] || expanded[row.id];\n      row.canExpand = row.subRows && !!row.subRows.length;\n\n      if (addToExpandedRows) {\n        expandedRows.push(row);\n      }\n\n      if (row.subRows && row.subRows.length && row.isExpanded) {\n        row.subRows.forEach(function (row) {\n          return handleRow(row, expandSubRows);\n        });\n      }\n    };\n\n    rows.forEach(function (row) {\n      return handleRow(row);\n    });\n    return expandedRows;\n  }\n\n  function getFilterMethod(filter, userFilterTypes, filterTypes) {\n    return isFunction(filter) || userFilterTypes[filter] || filterTypes[filter] || filterTypes.text;\n  }\n\n  function shouldAutoRemoveFilter(autoRemove, value, column) {\n    return autoRemove ? autoRemove(value, column) : typeof value === 'undefined';\n  }\n\n  function unpreparedAccessWarning() {\n    throw new Error('React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.');\n  }\n\n  var passiveSupported = null;\n\n  function passiveEventSupported() {\n    // memoize support to avoid adding multiple test events\n    if (typeof passiveSupported === 'boolean') return passiveSupported;\n    var supported = false;\n\n    try {\n      var options = {\n        get passive() {\n          supported = true;\n          return false;\n        }\n\n      };\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (err) {\n      supported = false;\n    }\n\n    passiveSupported = supported;\n    return passiveSupported;\n  } //\n\n\n  var reOpenBracket = /\\[/g;\n  var reCloseBracket = /\\]/g;\n\n  function makePathArray(obj) {\n    return flattenDeep(obj) // remove all periods in parts\n    .map(function (d) {\n      return String(d).replace('.', '_');\n    }) // join parts using period\n    .join('.') // replace brackets with periods\n    .replace(reOpenBracket, '.').replace(reCloseBracket, '') // split it back out on periods\n    .split('.');\n  }\n\n  function flattenDeep(arr, newArr) {\n    if (newArr === void 0) {\n      newArr = [];\n    }\n\n    if (!Array.isArray(arr)) {\n      newArr.push(arr);\n    } else {\n      for (var i = 0; i < arr.length; i += 1) {\n        flattenDeep(arr[i], newArr);\n      }\n    }\n\n    return newArr;\n  }\n\n  var defaultGetTableProps = function defaultGetTableProps(props) {\n    return _extends({\n      role: 'table'\n    }, props);\n  };\n\n  var defaultGetTableBodyProps = function defaultGetTableBodyProps(props) {\n    return _extends({\n      role: 'rowgroup'\n    }, props);\n  };\n\n  var defaultGetHeaderProps = function defaultGetHeaderProps(props, _ref) {\n    var column = _ref.column;\n    return _extends({\n      key: \"header_\" + column.id,\n      colSpan: column.totalVisibleHeaderCount,\n      role: 'columnheader'\n    }, props);\n  };\n\n  var defaultGetFooterProps = function defaultGetFooterProps(props, _ref2) {\n    var column = _ref2.column;\n    return _extends({\n      key: \"footer_\" + column.id,\n      colSpan: column.totalVisibleHeaderCount\n    }, props);\n  };\n\n  var defaultGetHeaderGroupProps = function defaultGetHeaderGroupProps(props, _ref3) {\n    var index = _ref3.index;\n    return _extends({\n      key: \"headerGroup_\" + index,\n      role: 'row'\n    }, props);\n  };\n\n  var defaultGetFooterGroupProps = function defaultGetFooterGroupProps(props, _ref4) {\n    var index = _ref4.index;\n    return _extends({\n      key: \"footerGroup_\" + index\n    }, props);\n  };\n\n  var defaultGetRowProps = function defaultGetRowProps(props, _ref5) {\n    var row = _ref5.row;\n    return _extends({\n      key: \"row_\" + row.id,\n      role: 'row'\n    }, props);\n  };\n\n  var defaultGetCellProps = function defaultGetCellProps(props, _ref6) {\n    var cell = _ref6.cell;\n    return _extends({\n      key: \"cell_\" + cell.row.id + \"_\" + cell.column.id,\n      role: 'cell'\n    }, props);\n  };\n\n  function makeDefaultPluginHooks() {\n    return {\n      useOptions: [],\n      stateReducers: [],\n      useControlledState: [],\n      columns: [],\n      columnsDeps: [],\n      allColumns: [],\n      allColumnsDeps: [],\n      accessValue: [],\n      materializedColumns: [],\n      materializedColumnsDeps: [],\n      useInstanceAfterData: [],\n      visibleColumns: [],\n      visibleColumnsDeps: [],\n      headerGroups: [],\n      headerGroupsDeps: [],\n      useInstanceBeforeDimensions: [],\n      useInstance: [],\n      prepareRow: [],\n      getTableProps: [defaultGetTableProps],\n      getTableBodyProps: [defaultGetTableBodyProps],\n      getHeaderGroupProps: [defaultGetHeaderGroupProps],\n      getFooterGroupProps: [defaultGetFooterGroupProps],\n      getHeaderProps: [defaultGetHeaderProps],\n      getFooterProps: [defaultGetFooterProps],\n      getRowProps: [defaultGetRowProps],\n      getCellProps: [defaultGetCellProps],\n      useFinalInstance: []\n    };\n  }\n\n  actions.resetHiddenColumns = 'resetHiddenColumns';\n  actions.toggleHideColumn = 'toggleHideColumn';\n  actions.setHiddenColumns = 'setHiddenColumns';\n  actions.toggleHideAllColumns = 'toggleHideAllColumns';\n\n  var useColumnVisibility = function useColumnVisibility(hooks) {\n    hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps];\n    hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps];\n    hooks.stateReducers.push(reducer);\n    hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions);\n    hooks.headerGroupsDeps.push(function (deps, _ref) {\n      var instance = _ref.instance;\n      return [].concat(deps, [instance.state.hiddenColumns]);\n    });\n    hooks.useInstance.push(useInstance);\n  };\n\n  useColumnVisibility.pluginName = 'useColumnVisibility';\n\n  var defaultGetToggleHiddenProps = function defaultGetToggleHiddenProps(props, _ref2) {\n    var column = _ref2.column;\n    return [props, {\n      onChange: function onChange(e) {\n        column.toggleHidden(!e.target.checked);\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      checked: column.isVisible,\n      title: 'Toggle Column Visible'\n    }];\n  };\n\n  var defaultGetToggleHideAllColumnsProps = function defaultGetToggleHideAllColumnsProps(props, _ref3) {\n    var instance = _ref3.instance;\n    return [props, {\n      onChange: function onChange(e) {\n        instance.toggleHideAllColumns(!e.target.checked);\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n      title: 'Toggle All Columns Hidden',\n      indeterminate: !instance.allColumnsHidden && instance.state.hiddenColumns.length\n    }];\n  };\n\n  function reducer(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        hiddenColumns: []\n      }, state);\n    }\n\n    if (action.type === actions.resetHiddenColumns) {\n      return _extends({}, state, {\n        hiddenColumns: instance.initialState.hiddenColumns || []\n      });\n    }\n\n    if (action.type === actions.toggleHideColumn) {\n      var should = typeof action.value !== 'undefined' ? action.value : !state.hiddenColumns.includes(action.columnId);\n      var hiddenColumns = should ? [].concat(state.hiddenColumns, [action.columnId]) : state.hiddenColumns.filter(function (d) {\n        return d !== action.columnId;\n      });\n      return _extends({}, state, {\n        hiddenColumns: hiddenColumns\n      });\n    }\n\n    if (action.type === actions.setHiddenColumns) {\n      return _extends({}, state, {\n        hiddenColumns: functionalUpdate(action.value, state.hiddenColumns)\n      });\n    }\n\n    if (action.type === actions.toggleHideAllColumns) {\n      var shouldAll = typeof action.value !== 'undefined' ? action.value : !state.hiddenColumns.length;\n      return _extends({}, state, {\n        hiddenColumns: shouldAll ? instance.allColumns.map(function (d) {\n          return d.id;\n        }) : []\n      });\n    }\n  }\n\n  function useInstanceBeforeDimensions(instance) {\n    var headers = instance.headers,\n        hiddenColumns = instance.state.hiddenColumns;\n    var isMountedRef = React.useRef(false);\n    if (!isMountedRef.current) ;\n\n    var handleColumn = function handleColumn(column, parentVisible) {\n      column.isVisible = parentVisible && !hiddenColumns.includes(column.id);\n      var totalVisibleHeaderCount = 0;\n\n      if (column.headers && column.headers.length) {\n        column.headers.forEach(function (subColumn) {\n          return totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible);\n        });\n      } else {\n        totalVisibleHeaderCount = column.isVisible ? 1 : 0;\n      }\n\n      column.totalVisibleHeaderCount = totalVisibleHeaderCount;\n      return totalVisibleHeaderCount;\n    };\n\n    var totalVisibleHeaderCount = 0;\n    headers.forEach(function (subHeader) {\n      return totalVisibleHeaderCount += handleColumn(subHeader, true);\n    });\n  }\n\n  function useInstance(instance) {\n    var columns = instance.columns,\n        flatHeaders = instance.flatHeaders,\n        dispatch = instance.dispatch,\n        allColumns = instance.allColumns,\n        getHooks = instance.getHooks,\n        hiddenColumns = instance.state.hiddenColumns,\n        _instance$autoResetHi = instance.autoResetHiddenColumns,\n        autoResetHiddenColumns = _instance$autoResetHi === void 0 ? true : _instance$autoResetHi;\n    var getInstance = useGetLatest(instance);\n    var allColumnsHidden = allColumns.length === hiddenColumns.length;\n    var toggleHideColumn = React.useCallback(function (columnId, value) {\n      return dispatch({\n        type: actions.toggleHideColumn,\n        columnId: columnId,\n        value: value\n      });\n    }, [dispatch]);\n    var setHiddenColumns = React.useCallback(function (value) {\n      return dispatch({\n        type: actions.setHiddenColumns,\n        value: value\n      });\n    }, [dispatch]);\n    var toggleHideAllColumns = React.useCallback(function (value) {\n      return dispatch({\n        type: actions.toggleHideAllColumns,\n        value: value\n      });\n    }, [dispatch]);\n    var getToggleHideAllColumnsProps = makePropGetter(getHooks().getToggleHideAllColumnsProps, {\n      instance: getInstance()\n    });\n    flatHeaders.forEach(function (column) {\n      column.toggleHidden = function (value) {\n        dispatch({\n          type: actions.toggleHideColumn,\n          columnId: column.id,\n          value: value\n        });\n      };\n\n      column.getToggleHiddenProps = makePropGetter(getHooks().getToggleHiddenProps, {\n        instance: getInstance(),\n        column: column\n      });\n    });\n    var getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetHiddenColumns()) {\n        dispatch({\n          type: actions.resetHiddenColumns\n        });\n      }\n    }, [dispatch, columns]);\n    Object.assign(instance, {\n      allColumnsHidden: allColumnsHidden,\n      toggleHideColumn: toggleHideColumn,\n      setHiddenColumns: setHiddenColumns,\n      toggleHideAllColumns: toggleHideAllColumns,\n      getToggleHideAllColumnsProps: getToggleHideAllColumnsProps\n    });\n  }\n\n  var defaultInitialState = {};\n  var defaultColumnInstance = {};\n\n  var defaultReducer = function defaultReducer(state, action, prevState) {\n    return state;\n  };\n\n  var defaultGetSubRows = function defaultGetSubRows(row, index) {\n    return row.subRows || [];\n  };\n\n  var defaultGetRowId = function defaultGetRowId(row, index, parent) {\n    return \"\" + (parent ? [parent.id, index].join('.') : index);\n  };\n\n  var defaultUseControlledState = function defaultUseControlledState(d) {\n    return d;\n  };\n\n  function applyDefaults(props) {\n    var _props$initialState = props.initialState,\n        initialState = _props$initialState === void 0 ? defaultInitialState : _props$initialState,\n        _props$defaultColumn = props.defaultColumn,\n        defaultColumn = _props$defaultColumn === void 0 ? defaultColumnInstance : _props$defaultColumn,\n        _props$getSubRows = props.getSubRows,\n        getSubRows = _props$getSubRows === void 0 ? defaultGetSubRows : _props$getSubRows,\n        _props$getRowId = props.getRowId,\n        getRowId = _props$getRowId === void 0 ? defaultGetRowId : _props$getRowId,\n        _props$stateReducer = props.stateReducer,\n        stateReducer = _props$stateReducer === void 0 ? defaultReducer : _props$stateReducer,\n        _props$useControlledS = props.useControlledState,\n        useControlledState = _props$useControlledS === void 0 ? defaultUseControlledState : _props$useControlledS,\n        rest = _objectWithoutPropertiesLoose(props, [\"initialState\", \"defaultColumn\", \"getSubRows\", \"getRowId\", \"stateReducer\", \"useControlledState\"]);\n\n    return _extends({}, rest, {\n      initialState: initialState,\n      defaultColumn: defaultColumn,\n      getSubRows: getSubRows,\n      getRowId: getRowId,\n      stateReducer: stateReducer,\n      useControlledState: useControlledState\n    });\n  }\n\n  var useTable = function useTable(props) {\n    for (var _len = arguments.length, plugins = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      plugins[_key - 1] = arguments[_key];\n    } // Apply default props\n\n\n    props = applyDefaults(props); // Add core plugins\n\n    plugins = [useColumnVisibility].concat(plugins); // Create the table instance\n\n    var instanceRef = React.useRef({}); // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n\n    var getInstance = useGetLatest(instanceRef.current); // Assign the props, plugins and hooks to the instance\n\n    Object.assign(getInstance(), _extends({}, props, {\n      plugins: plugins,\n      hooks: makeDefaultPluginHooks()\n    })); // Allow plugins to register hooks as early as possible\n\n    plugins.filter(Boolean).forEach(function (plugin) {\n      plugin(getInstance().hooks);\n    }); // Consume all hooks and make a getter for them\n\n    var getHooks = useGetLatest(getInstance().hooks);\n    getInstance().getHooks = getHooks;\n    delete getInstance().hooks; // Allow useOptions hooks to modify the options coming into the table\n\n    Object.assign(getInstance(), reduceHooks(getHooks().useOptions, applyDefaults(props)));\n\n    var _getInstance = getInstance(),\n        data = _getInstance.data,\n        userColumns = _getInstance.columns,\n        initialState = _getInstance.initialState,\n        defaultColumn = _getInstance.defaultColumn,\n        getSubRows = _getInstance.getSubRows,\n        getRowId = _getInstance.getRowId,\n        stateReducer = _getInstance.stateReducer,\n        useControlledState = _getInstance.useControlledState; // Setup user reducer ref\n\n\n    var getStateReducer = useGetLatest(stateReducer); // Build the reducer\n\n    var reducer = React.useCallback(function (state, action) {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({\n          action: action\n        });\n        throw new Error('Unknown Action 👆');\n      } // Reduce the state from all plugin reducers\n\n\n      return [].concat(getHooks().stateReducers, Array.isArray(getStateReducer()) ? getStateReducer() : [getStateReducer()]).reduce(function (s, handler) {\n        return handler(s, action, state, getInstance()) || s;\n      }, state);\n    }, [getHooks, getStateReducer, getInstance]); // Start the reducer\n\n    var _React$useReducer = React.useReducer(reducer, undefined, function () {\n      return reducer(initialState, {\n        type: actions.init\n      });\n    }),\n        reducerState = _React$useReducer[0],\n        dispatch = _React$useReducer[1]; // Allow the user to control the final state with hooks\n\n\n    var state = reduceHooks([].concat(getHooks().useControlledState, [useControlledState]), reducerState, {\n      instance: getInstance()\n    });\n    Object.assign(getInstance(), {\n      state: state,\n      dispatch: dispatch\n    }); // Decorate All the columns\n\n    var columns = React.useMemo(function () {\n      return linkColumnStructure(reduceHooks(getHooks().columns, userColumns, {\n        instance: getInstance()\n      }));\n    }, [getHooks, getInstance, userColumns].concat(reduceHooks(getHooks().columnsDeps, [], {\n      instance: getInstance()\n    })));\n    getInstance().columns = columns; // Get the flat list of all columns and allow hooks to decorate\n    // those columns (and trigger this memoization via deps)\n\n    var allColumns = React.useMemo(function () {\n      return reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance()\n      }).map(assignColumnAccessor);\n    }, [columns, getHooks, getInstance].concat(reduceHooks(getHooks().allColumnsDeps, [], {\n      instance: getInstance()\n    })));\n    getInstance().allColumns = allColumns; // Access the row model using initial columns\n\n    var _React$useMemo = React.useMemo(function () {\n      var rows = [];\n      var flatRows = [];\n      var rowsById = {};\n      var allColumnsQueue = [].concat(allColumns);\n\n      while (allColumnsQueue.length) {\n        var column = allColumnsQueue.shift();\n        accessRowsForColumn({\n          data: data,\n          rows: rows,\n          flatRows: flatRows,\n          rowsById: rowsById,\n          column: column,\n          getRowId: getRowId,\n          getSubRows: getSubRows,\n          accessValueHooks: getHooks().accessValue,\n          getInstance: getInstance\n        });\n      }\n\n      return [rows, flatRows, rowsById];\n    }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance]),\n        rows = _React$useMemo[0],\n        flatRows = _React$useMemo[1],\n        rowsById = _React$useMemo[2];\n\n    Object.assign(getInstance(), {\n      rows: rows,\n      initialRows: [].concat(rows),\n      flatRows: flatRows,\n      rowsById: rowsById // materializedColumns,\n\n    });\n    loopHooks(getHooks().useInstanceAfterData, getInstance()); // Get the flat list of all columns AFTER the rows\n    // have been access, and allow hooks to decorate\n    // those columns (and trigger this memoization via deps)\n\n    var visibleColumns = React.useMemo(function () {\n      return reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance()\n      }).map(function (d) {\n        return decorateColumn(d, defaultColumn);\n      });\n    }, [getHooks, allColumns, getInstance, defaultColumn].concat(reduceHooks(getHooks().visibleColumnsDeps, [], {\n      instance: getInstance()\n    }))); // Combine new visible columns with all columns\n\n    allColumns = React.useMemo(function () {\n      var columns = [].concat(visibleColumns);\n      allColumns.forEach(function (column) {\n        if (!columns.find(function (d) {\n          return d.id === column.id;\n        })) {\n          columns.push(column);\n        }\n      });\n      return columns;\n    }, [allColumns, visibleColumns]);\n    getInstance().allColumns = allColumns;\n    {\n      var duplicateColumns = allColumns.filter(function (column, i) {\n        return allColumns.findIndex(function (d) {\n          return d.id === column.id;\n        }) !== i;\n      });\n\n      if (duplicateColumns.length) {\n        console.info(allColumns);\n        throw new Error(\"Duplicate columns were found with ids: \\\"\" + duplicateColumns.map(function (d) {\n          return d.id;\n        }).join(', ') + \"\\\" in the columns array above\");\n      }\n    } // Make the headerGroups\n\n    var headerGroups = React.useMemo(function () {\n      return reduceHooks(getHooks().headerGroups, makeHeaderGroups(visibleColumns, defaultColumn), getInstance());\n    }, [getHooks, visibleColumns, defaultColumn, getInstance].concat(reduceHooks(getHooks().headerGroupsDeps, [], {\n      instance: getInstance()\n    })));\n    getInstance().headerGroups = headerGroups; // Get the first level of headers\n\n    var headers = React.useMemo(function () {\n      return headerGroups.length ? headerGroups[0].headers : [];\n    }, [headerGroups]);\n    getInstance().headers = headers; // Provide a flat header list for utilities\n\n    getInstance().flatHeaders = headerGroups.reduce(function (all, headerGroup) {\n      return [].concat(all, headerGroup.headers);\n    }, []);\n    loopHooks(getHooks().useInstanceBeforeDimensions, getInstance()); // Filter columns down to visible ones\n\n    var visibleColumnsDep = visibleColumns.filter(function (d) {\n      return d.isVisible;\n    }).map(function (d) {\n      return d.id;\n    }).sort().join('_');\n    visibleColumns = React.useMemo(function () {\n      return visibleColumns.filter(function (d) {\n        return d.isVisible;\n      });\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]);\n    getInstance().visibleColumns = visibleColumns; // Header Visibility is needed by this point\n\n    var _calculateHeaderWidth = calculateHeaderWidths(headers),\n        totalColumnsMinWidth = _calculateHeaderWidth[0],\n        totalColumnsWidth = _calculateHeaderWidth[1],\n        totalColumnsMaxWidth = _calculateHeaderWidth[2];\n\n    getInstance().totalColumnsMinWidth = totalColumnsMinWidth;\n    getInstance().totalColumnsWidth = totalColumnsWidth;\n    getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth;\n    loopHooks(getHooks().useInstance, getInstance()) // Each materialized header needs to be assigned a render function and other\n    // prop getter properties here.\n    ;\n    [].concat(getInstance().flatHeaders, getInstance().allColumns).forEach(function (column) {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column); // Give columns/headers a default getHeaderProps\n\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column: column\n      }); // Give columns/headers a default getFooterProps\n\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column: column\n      });\n    });\n    getInstance().headerGroups = React.useMemo(function () {\n      return headerGroups.filter(function (headerGroup, i) {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(function (column) {\n          var recurse = function recurse(headers) {\n            return headers.filter(function (column) {\n              if (column.headers) {\n                return recurse(column.headers);\n              }\n\n              return column.isVisible;\n            }).length;\n          };\n\n          if (column.headers) {\n            return recurse(column.headers);\n          }\n\n          return column.isVisible;\n        }); // Give headerGroups getRowProps\n\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(getHooks().getHeaderGroupProps, {\n            instance: getInstance(),\n            headerGroup: headerGroup,\n            index: i\n          });\n          headerGroup.getFooterGroupProps = makePropGetter(getHooks().getFooterGroupProps, {\n            instance: getInstance(),\n            headerGroup: headerGroup,\n            index: i\n          });\n          return true;\n        }\n\n        return false;\n      });\n    }, [headerGroups, getInstance, getHooks]);\n    getInstance().footerGroups = [].concat(getInstance().headerGroups).reverse(); // The prepareRow function is absolutely necessary and MUST be called on\n    // any rows the user wishes to be displayed.\n\n    getInstance().prepareRow = React.useCallback(function (row) {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row: row\n      }); // Build the visible cells for each row\n\n      row.allCells = allColumns.map(function (column) {\n        var value = row.values[column.id];\n        var cell = {\n          column: column,\n          row: row,\n          value: value\n        }; // Give each cell a getCellProps base\n\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell: cell\n        }); // Give each cell a renderer function (supports multiple renderers)\n\n        cell.render = makeRenderer(getInstance(), column, {\n          row: row,\n          cell: cell,\n          value: value\n        });\n        return cell;\n      });\n      row.cells = visibleColumns.map(function (column) {\n        return row.allCells.find(function (cell) {\n          return cell.column.id === column.id;\n        });\n      }); // need to apply any row specific hooks (useExpanded requires this)\n\n      loopHooks(getHooks().prepareRow, row, {\n        instance: getInstance()\n      });\n    }, [getHooks, getInstance, allColumns, visibleColumns]);\n    getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n      instance: getInstance()\n    });\n    getInstance().getTableBodyProps = makePropGetter(getHooks().getTableBodyProps, {\n      instance: getInstance()\n    });\n    loopHooks(getHooks().useFinalInstance, getInstance());\n    return getInstance();\n  };\n\n  function calculateHeaderWidths(headers, left) {\n    if (left === void 0) {\n      left = 0;\n    }\n\n    var sumTotalMinWidth = 0;\n    var sumTotalWidth = 0;\n    var sumTotalMaxWidth = 0;\n    var sumTotalFlexWidth = 0;\n    headers.forEach(function (header) {\n      var subHeaders = header.headers;\n      header.totalLeft = left;\n\n      if (subHeaders && subHeaders.length) {\n        var _calculateHeaderWidth2 = calculateHeaderWidths(subHeaders, left),\n            totalMinWidth = _calculateHeaderWidth2[0],\n            totalWidth = _calculateHeaderWidth2[1],\n            totalMaxWidth = _calculateHeaderWidth2[2],\n            totalFlexWidth = _calculateHeaderWidth2[3];\n\n        header.totalMinWidth = totalMinWidth;\n        header.totalWidth = totalWidth;\n        header.totalMaxWidth = totalMaxWidth;\n        header.totalFlexWidth = totalFlexWidth;\n      } else {\n        header.totalMinWidth = header.minWidth;\n        header.totalWidth = Math.min(Math.max(header.minWidth, header.width), header.maxWidth);\n        header.totalMaxWidth = header.maxWidth;\n        header.totalFlexWidth = header.canResize ? header.totalWidth : 0;\n      }\n\n      if (header.isVisible) {\n        left += header.totalWidth;\n        sumTotalMinWidth += header.totalMinWidth;\n        sumTotalWidth += header.totalWidth;\n        sumTotalMaxWidth += header.totalMaxWidth;\n        sumTotalFlexWidth += header.totalFlexWidth;\n      }\n    });\n    return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth];\n  }\n\n  function accessRowsForColumn(_ref) {\n    var data = _ref.data,\n        rows = _ref.rows,\n        flatRows = _ref.flatRows,\n        rowsById = _ref.rowsById,\n        column = _ref.column,\n        getRowId = _ref.getRowId,\n        getSubRows = _ref.getSubRows,\n        accessValueHooks = _ref.accessValueHooks,\n        getInstance = _ref.getInstance; // Access the row's data column-by-column\n    // We do it this way so we can incrementally add materialized\n    // columns after the first pass and avoid excessive looping\n\n    var accessRow = function accessRow(originalRow, rowIndex, depth, parent, parentRows) {\n      if (depth === void 0) {\n        depth = 0;\n      } // Keep the original reference around\n\n\n      var original = originalRow;\n      var id = getRowId(originalRow, rowIndex, parent);\n      var row = rowsById[id]; // If the row hasn't been created, let's make it\n\n      if (!row) {\n        row = {\n          id: id,\n          original: original,\n          index: rowIndex,\n          depth: depth,\n          cells: [{}] // This is a dummy cell\n\n        }; // Override common array functions (and the dummy cell's getCellProps function)\n        // to show an error if it is accessed without calling prepareRow\n\n        row.cells.map = unpreparedAccessWarning;\n        row.cells.filter = unpreparedAccessWarning;\n        row.cells.forEach = unpreparedAccessWarning;\n        row.cells[0].getCellProps = unpreparedAccessWarning; // Create the cells and values\n\n        row.values = {}; // Push this row into the parentRows array\n\n        parentRows.push(row); // Keep track of every row in a flat array\n\n        flatRows.push(row); // Also keep track of every row by its ID\n\n        rowsById[id] = row; // Get the original subrows\n\n        row.originalSubRows = getSubRows(originalRow, rowIndex); // Then recursively access them\n\n        if (row.originalSubRows) {\n          var subRows = [];\n          row.originalSubRows.forEach(function (d, i) {\n            return accessRow(d, i, depth + 1, row, subRows);\n          }); // Keep the new subRows array on the row\n\n          row.subRows = subRows;\n        }\n      } else if (row.subRows) {\n        // If the row exists, then it's already been accessed\n        // Keep recursing, but don't worry about passing the\n        // accumlator array (those rows already exist)\n        row.originalSubRows.forEach(function (d, i) {\n          return accessRow(d, i, depth + 1, row);\n        });\n      } // If the column has an accessor, use it to get a value\n\n\n      if (column.accessor) {\n        row.values[column.id] = column.accessor(originalRow, rowIndex, row, parentRows, data);\n      } // Allow plugins to manipulate the column value\n\n\n      row.values[column.id] = reduceHooks(accessValueHooks, row.values[column.id], {\n        row: row,\n        column: column,\n        instance: getInstance()\n      }, true);\n    };\n\n    data.forEach(function (originalRow, rowIndex) {\n      return accessRow(originalRow, rowIndex, 0, undefined, rows);\n    });\n  }\n\n  actions.resetExpanded = 'resetExpanded';\n  actions.toggleRowExpanded = 'toggleRowExpanded';\n  actions.toggleAllRowsExpanded = 'toggleAllRowsExpanded';\n\n  var useExpanded = function useExpanded(hooks) {\n    hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps];\n    hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps];\n    hooks.stateReducers.push(reducer$1);\n    hooks.useInstance.push(useInstance$1);\n    hooks.prepareRow.push(prepareRow);\n  };\n\n  useExpanded.pluginName = 'useExpanded';\n\n  var defaultGetToggleAllRowsExpandedProps = function defaultGetToggleAllRowsExpandedProps(props, _ref) {\n    var instance = _ref.instance;\n    return [props, {\n      onClick: function onClick(e) {\n        instance.toggleAllRowsExpanded();\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      title: 'Toggle All Rows Expanded'\n    }];\n  };\n\n  var defaultGetToggleRowExpandedProps = function defaultGetToggleRowExpandedProps(props, _ref2) {\n    var row = _ref2.row;\n    return [props, {\n      onClick: function onClick() {\n        row.toggleRowExpanded();\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      title: 'Toggle Row Expanded'\n    }];\n  }; // Reducer\n\n\n  function reducer$1(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        expanded: {}\n      }, state);\n    }\n\n    if (action.type === actions.resetExpanded) {\n      return _extends({}, state, {\n        expanded: instance.initialState.expanded || {}\n      });\n    }\n\n    if (action.type === actions.toggleAllRowsExpanded) {\n      var value = action.value;\n      var isAllRowsExpanded = instance.isAllRowsExpanded,\n          rowsById = instance.rowsById;\n      var expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded;\n\n      if (expandAll) {\n        var expanded = {};\n        Object.keys(rowsById).forEach(function (rowId) {\n          expanded[rowId] = true;\n        });\n        return _extends({}, state, {\n          expanded: expanded\n        });\n      }\n\n      return _extends({}, state, {\n        expanded: {}\n      });\n    }\n\n    if (action.type === actions.toggleRowExpanded) {\n      var id = action.id,\n          setExpanded = action.value;\n      var exists = state.expanded[id];\n      var shouldExist = typeof setExpanded !== 'undefined' ? setExpanded : !exists;\n\n      if (!exists && shouldExist) {\n        var _extends2;\n\n        return _extends({}, state, {\n          expanded: _extends({}, state.expanded, (_extends2 = {}, _extends2[id] = true, _extends2))\n        });\n      } else if (exists && !shouldExist) {\n        var _state$expanded = state.expanded,\n            _ = _state$expanded[id],\n            rest = _objectWithoutPropertiesLoose(_state$expanded, [id].map(_toPropertyKey));\n\n        return _extends({}, state, {\n          expanded: rest\n        });\n      } else {\n        return state;\n      }\n    }\n  }\n\n  function useInstance$1(instance) {\n    var data = instance.data,\n        rows = instance.rows,\n        rowsById = instance.rowsById,\n        _instance$manualExpan = instance.manualExpandedKey,\n        manualExpandedKey = _instance$manualExpan === void 0 ? 'expanded' : _instance$manualExpan,\n        _instance$paginateExp = instance.paginateExpandedRows,\n        paginateExpandedRows = _instance$paginateExp === void 0 ? true : _instance$paginateExp,\n        _instance$expandSubRo = instance.expandSubRows,\n        expandSubRows = _instance$expandSubRo === void 0 ? true : _instance$expandSubRo,\n        _instance$autoResetEx = instance.autoResetExpanded,\n        autoResetExpanded = _instance$autoResetEx === void 0 ? true : _instance$autoResetEx,\n        getHooks = instance.getHooks,\n        plugins = instance.plugins,\n        expanded = instance.state.expanded,\n        dispatch = instance.dispatch;\n    ensurePluginOrder(plugins, ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'], 'useExpanded');\n    var getAutoResetExpanded = useGetLatest(autoResetExpanded);\n    var isAllRowsExpanded = Boolean(Object.keys(rowsById).length && Object.keys(expanded).length);\n\n    if (isAllRowsExpanded) {\n      if (Object.keys(rowsById).some(function (id) {\n        return !expanded[id];\n      })) {\n        isAllRowsExpanded = false;\n      }\n    } // Bypass any effects from firing when this changes\n\n\n    useMountedLayoutEffect(function () {\n      if (getAutoResetExpanded()) {\n        dispatch({\n          type: actions.resetExpanded\n        });\n      }\n    }, [dispatch, data]);\n    var toggleRowExpanded = React.useCallback(function (id, value) {\n      dispatch({\n        type: actions.toggleRowExpanded,\n        id: id,\n        value: value\n      });\n    }, [dispatch]);\n    var toggleAllRowsExpanded = React.useCallback(function (value) {\n      return dispatch({\n        type: actions.toggleAllRowsExpanded,\n        value: value\n      });\n    }, [dispatch]);\n    var expandedRows = React.useMemo(function () {\n      if (paginateExpandedRows) {\n        return expandRows(rows, {\n          manualExpandedKey: manualExpandedKey,\n          expanded: expanded,\n          expandSubRows: expandSubRows\n        });\n      }\n\n      return rows;\n    }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows]);\n    var expandedDepth = React.useMemo(function () {\n      return findExpandedDepth(expanded);\n    }, [expanded]);\n    var getInstance = useGetLatest(instance);\n    var getToggleAllRowsExpandedProps = makePropGetter(getHooks().getToggleAllRowsExpandedProps, {\n      instance: getInstance()\n    });\n    Object.assign(instance, {\n      preExpandedRows: rows,\n      expandedRows: expandedRows,\n      rows: expandedRows,\n      expandedDepth: expandedDepth,\n      isAllRowsExpanded: isAllRowsExpanded,\n      toggleRowExpanded: toggleRowExpanded,\n      toggleAllRowsExpanded: toggleAllRowsExpanded,\n      getToggleAllRowsExpandedProps: getToggleAllRowsExpandedProps\n    });\n  }\n\n  function prepareRow(row, _ref3) {\n    var getHooks = _ref3.instance.getHooks,\n        instance = _ref3.instance;\n\n    row.toggleRowExpanded = function (set) {\n      return instance.toggleRowExpanded(row.id, set);\n    };\n\n    row.getToggleRowExpandedProps = makePropGetter(getHooks().getToggleRowExpandedProps, {\n      instance: instance,\n      row: row\n    });\n  }\n\n  function findExpandedDepth(expanded) {\n    var maxDepth = 0;\n    Object.keys(expanded).forEach(function (id) {\n      var splitId = id.split('.');\n      maxDepth = Math.max(maxDepth, splitId.length);\n    });\n    return maxDepth;\n  }\n\n  var text = function text(rows, ids, filterValue) {\n    rows = rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return String(rowValue).toLowerCase().includes(String(filterValue).toLowerCase());\n      });\n    });\n    return rows;\n  };\n\n  text.autoRemove = function (val) {\n    return !val;\n  };\n\n  var exactText = function exactText(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue !== undefined ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase() : true;\n      });\n    });\n  };\n\n  exactText.autoRemove = function (val) {\n    return !val;\n  };\n\n  var exactTextCase = function exactTextCase(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue !== undefined ? String(rowValue) === String(filterValue) : true;\n      });\n    });\n  };\n\n  exactTextCase.autoRemove = function (val) {\n    return !val;\n  };\n\n  var includes = function includes(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue.includes(filterValue);\n      });\n    });\n  };\n\n  includes.autoRemove = function (val) {\n    return !val || !val.length;\n  };\n\n  var includesAll = function includesAll(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue && rowValue.length && filterValue.every(function (val) {\n          return rowValue.includes(val);\n        });\n      });\n    });\n  };\n\n  includesAll.autoRemove = function (val) {\n    return !val || !val.length;\n  };\n\n  var includesSome = function includesSome(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue && rowValue.length && filterValue.some(function (val) {\n          return rowValue.includes(val);\n        });\n      });\n    });\n  };\n\n  includesSome.autoRemove = function (val) {\n    return !val || !val.length;\n  };\n\n  var includesValue = function includesValue(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return filterValue.includes(rowValue);\n      });\n    });\n  };\n\n  includesValue.autoRemove = function (val) {\n    return !val || !val.length;\n  };\n\n  var exact = function exact(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue === filterValue;\n      });\n    });\n  };\n\n  exact.autoRemove = function (val) {\n    return typeof val === 'undefined';\n  };\n\n  var equals = function equals(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id]; // eslint-disable-next-line eqeqeq\n\n        return rowValue == filterValue;\n      });\n    });\n  };\n\n  equals.autoRemove = function (val) {\n    return val == null;\n  };\n\n  var between = function between(rows, ids, filterValue) {\n    var _ref = filterValue || [],\n        min = _ref[0],\n        max = _ref[1];\n\n    min = typeof min === 'number' ? min : -Infinity;\n    max = typeof max === 'number' ? max : Infinity;\n\n    if (min > max) {\n      var temp = min;\n      min = max;\n      max = temp;\n    }\n\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue >= min && rowValue <= max;\n      });\n    });\n  };\n\n  between.autoRemove = function (val) {\n    return !val || typeof val[0] !== 'number' && typeof val[1] !== 'number';\n  };\n\n  var filterTypes = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    text: text,\n    exactText: exactText,\n    exactTextCase: exactTextCase,\n    includes: includes,\n    includesAll: includesAll,\n    includesSome: includesSome,\n    includesValue: includesValue,\n    exact: exact,\n    equals: equals,\n    between: between\n  });\n  actions.resetFilters = 'resetFilters';\n  actions.setFilter = 'setFilter';\n  actions.setAllFilters = 'setAllFilters';\n\n  var useFilters = function useFilters(hooks) {\n    hooks.stateReducers.push(reducer$2);\n    hooks.useInstance.push(useInstance$2);\n  };\n\n  useFilters.pluginName = 'useFilters';\n\n  function reducer$2(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        filters: []\n      }, state);\n    }\n\n    if (action.type === actions.resetFilters) {\n      return _extends({}, state, {\n        filters: instance.initialState.filters || []\n      });\n    }\n\n    if (action.type === actions.setFilter) {\n      var columnId = action.columnId,\n          filterValue = action.filterValue;\n      var allColumns = instance.allColumns,\n          userFilterTypes = instance.filterTypes;\n      var column = allColumns.find(function (d) {\n        return d.id === columnId;\n      });\n\n      if (!column) {\n        throw new Error(\"React-Table: Could not find a column with id: \" + columnId);\n      }\n\n      var filterMethod = getFilterMethod(column.filter, userFilterTypes || {}, filterTypes);\n      var previousfilter = state.filters.find(function (d) {\n        return d.id === columnId;\n      });\n      var newFilter = functionalUpdate(filterValue, previousfilter && previousfilter.value); //\n\n      if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n        return _extends({}, state, {\n          filters: state.filters.filter(function (d) {\n            return d.id !== columnId;\n          })\n        });\n      }\n\n      if (previousfilter) {\n        return _extends({}, state, {\n          filters: state.filters.map(function (d) {\n            if (d.id === columnId) {\n              return {\n                id: columnId,\n                value: newFilter\n              };\n            }\n\n            return d;\n          })\n        });\n      }\n\n      return _extends({}, state, {\n        filters: [].concat(state.filters, [{\n          id: columnId,\n          value: newFilter\n        }])\n      });\n    }\n\n    if (action.type === actions.setAllFilters) {\n      var filters = action.filters;\n      var _allColumns = instance.allColumns,\n          _userFilterTypes = instance.filterTypes;\n      return _extends({}, state, {\n        // Filter out undefined values\n        filters: functionalUpdate(filters, state.filters).filter(function (filter) {\n          var column = _allColumns.find(function (d) {\n            return d.id === filter.id;\n          });\n\n          var filterMethod = getFilterMethod(column.filter, _userFilterTypes || {}, filterTypes);\n\n          if (shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)) {\n            return false;\n          }\n\n          return true;\n        })\n      });\n    }\n  }\n\n  function useInstance$2(instance) {\n    var data = instance.data,\n        rows = instance.rows,\n        flatRows = instance.flatRows,\n        rowsById = instance.rowsById,\n        allColumns = instance.allColumns,\n        userFilterTypes = instance.filterTypes,\n        manualFilters = instance.manualFilters,\n        _instance$defaultCanF = instance.defaultCanFilter,\n        defaultCanFilter = _instance$defaultCanF === void 0 ? false : _instance$defaultCanF,\n        disableFilters = instance.disableFilters,\n        filters = instance.state.filters,\n        dispatch = instance.dispatch,\n        _instance$autoResetFi = instance.autoResetFilters,\n        autoResetFilters = _instance$autoResetFi === void 0 ? true : _instance$autoResetFi;\n    var setFilter = React.useCallback(function (columnId, filterValue) {\n      dispatch({\n        type: actions.setFilter,\n        columnId: columnId,\n        filterValue: filterValue\n      });\n    }, [dispatch]);\n    var setAllFilters = React.useCallback(function (filters) {\n      dispatch({\n        type: actions.setAllFilters,\n        filters: filters\n      });\n    }, [dispatch]);\n    allColumns.forEach(function (column) {\n      var id = column.id,\n          accessor = column.accessor,\n          columnDefaultCanFilter = column.defaultCanFilter,\n          columnDisableFilters = column.disableFilters; // Determine if a column is filterable\n\n      column.canFilter = accessor ? getFirstDefined(columnDisableFilters === true ? false : undefined, disableFilters === true ? false : undefined, true) : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false); // Provide the column a way of updating the filter value\n\n      column.setFilter = function (val) {\n        return setFilter(column.id, val);\n      }; // Provide the current filter value to the column for\n      // convenience\n\n\n      var found = filters.find(function (d) {\n        return d.id === id;\n      });\n      column.filterValue = found && found.value;\n    });\n\n    var _React$useMemo = React.useMemo(function () {\n      if (manualFilters || !filters.length) {\n        return [rows, flatRows, rowsById];\n      }\n\n      var filteredFlatRows = [];\n      var filteredRowsById = {}; // Filters top level and nested rows\n\n      var filterRows = function filterRows(rows, depth) {\n        if (depth === void 0) {\n          depth = 0;\n        }\n\n        var filteredRows = rows;\n        filteredRows = filters.reduce(function (filteredSoFar, _ref) {\n          var columnId = _ref.id,\n              filterValue = _ref.value; // Find the filters column\n\n          var column = allColumns.find(function (d) {\n            return d.id === columnId;\n          });\n\n          if (!column) {\n            return filteredSoFar;\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar;\n          }\n\n          var filterMethod = getFilterMethod(column.filter, userFilterTypes || {}, filterTypes);\n\n          if (!filterMethod) {\n            console.warn(\"Could not find a valid 'column.filter' for column with the ID: \" + column.id + \".\");\n            return filteredSoFar;\n          } // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n\n\n          column.filteredRows = filterMethod(filteredSoFar, [columnId], filterValue);\n          return column.filteredRows;\n        }, rows); // Apply the filter to any subRows\n        // We technically could do this recursively in the above loop,\n        // but that would severely hinder the API for the user, since they\n        // would be required to do that recursion in some scenarios\n\n        filteredRows.forEach(function (row) {\n          filteredFlatRows.push(row);\n          filteredRowsById[row.id] = row;\n\n          if (!row.subRows) {\n            return;\n          }\n\n          row.subRows = row.subRows && row.subRows.length > 0 ? filterRows(row.subRows, depth + 1) : row.subRows;\n        });\n        return filteredRows;\n      };\n\n      return [filterRows(rows), filteredFlatRows, filteredRowsById];\n    }, [manualFilters, filters, rows, flatRows, rowsById, allColumns, userFilterTypes]),\n        filteredRows = _React$useMemo[0],\n        filteredFlatRows = _React$useMemo[1],\n        filteredRowsById = _React$useMemo[2];\n\n    React.useMemo(function () {\n      // Now that each filtered column has it's partially filtered rows,\n      // lets assign the final filtered rows to all of the other columns\n      var nonFilteredColumns = allColumns.filter(function (column) {\n        return !filters.find(function (d) {\n          return d.id === column.id;\n        });\n      }); // This essentially enables faceted filter options to be built easily\n      // using every column's preFilteredRows value\n\n      nonFilteredColumns.forEach(function (column) {\n        column.preFilteredRows = filteredRows;\n        column.filteredRows = filteredRows;\n      });\n    }, [filteredRows, filters, allColumns]);\n    var getAutoResetFilters = useGetLatest(autoResetFilters);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetFilters()) {\n        dispatch({\n          type: actions.resetFilters\n        });\n      }\n    }, [dispatch, manualFilters ? null : data]);\n    Object.assign(instance, {\n      preFilteredRows: rows,\n      preFilteredFlatRows: flatRows,\n      preFilteredRowsById: rowsById,\n      filteredRows: filteredRows,\n      filteredFlatRows: filteredFlatRows,\n      filteredRowsById: filteredRowsById,\n      rows: filteredRows,\n      flatRows: filteredFlatRows,\n      rowsById: filteredRowsById,\n      setFilter: setFilter,\n      setAllFilters: setAllFilters\n    });\n  }\n\n  actions.resetGlobalFilter = 'resetGlobalFilter';\n  actions.setGlobalFilter = 'setGlobalFilter';\n\n  var useGlobalFilter = function useGlobalFilter(hooks) {\n    hooks.stateReducers.push(reducer$3);\n    hooks.useInstance.push(useInstance$3);\n  };\n\n  useGlobalFilter.pluginName = 'useGlobalFilter';\n\n  function reducer$3(state, action, previousState, instance) {\n    if (action.type === actions.resetGlobalFilter) {\n      return _extends({}, state, {\n        globalFilter: instance.initialState.globalFilter || undefined\n      });\n    }\n\n    if (action.type === actions.setGlobalFilter) {\n      var filterValue = action.filterValue;\n      var userFilterTypes = instance.userFilterTypes;\n      var filterMethod = getFilterMethod(instance.globalFilter, userFilterTypes || {}, filterTypes);\n      var newFilter = functionalUpdate(filterValue, state.globalFilter); //\n\n      if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n        var globalFilter = state.globalFilter,\n            stateWithoutGlobalFilter = _objectWithoutPropertiesLoose(state, [\"globalFilter\"]);\n\n        return stateWithoutGlobalFilter;\n      }\n\n      return _extends({}, state, {\n        globalFilter: newFilter\n      });\n    }\n  }\n\n  function useInstance$3(instance) {\n    var data = instance.data,\n        rows = instance.rows,\n        flatRows = instance.flatRows,\n        rowsById = instance.rowsById,\n        allColumns = instance.allColumns,\n        userFilterTypes = instance.filterTypes,\n        globalFilter = instance.globalFilter,\n        manualGlobalFilter = instance.manualGlobalFilter,\n        globalFilterValue = instance.state.globalFilter,\n        dispatch = instance.dispatch,\n        _instance$autoResetGl = instance.autoResetGlobalFilter,\n        autoResetGlobalFilter = _instance$autoResetGl === void 0 ? true : _instance$autoResetGl,\n        disableGlobalFilter = instance.disableGlobalFilter;\n    var setGlobalFilter = React.useCallback(function (filterValue) {\n      dispatch({\n        type: actions.setGlobalFilter,\n        filterValue: filterValue\n      });\n    }, [dispatch]); // TODO: Create a filter cache for incremental high speed multi-filtering\n    // This gets pretty complicated pretty fast, since you have to maintain a\n    // cache for each row group (top-level rows, and each row's recursive subrows)\n    // This would make multi-filtering a lot faster though. Too far?\n\n    var _React$useMemo = React.useMemo(function () {\n      if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n        return [rows, flatRows, rowsById];\n      }\n\n      var filteredFlatRows = [];\n      var filteredRowsById = {};\n      var filterMethod = getFilterMethod(globalFilter, userFilterTypes || {}, filterTypes);\n\n      if (!filterMethod) {\n        console.warn(\"Could not find a valid 'globalFilter' option.\");\n        return rows;\n      }\n\n      allColumns.forEach(function (column) {\n        var columnDisableGlobalFilter = column.disableGlobalFilter;\n        column.canFilter = getFirstDefined(columnDisableGlobalFilter === true ? false : undefined, disableGlobalFilter === true ? false : undefined, true);\n      });\n      var filterableColumns = allColumns.filter(function (c) {\n        return c.canFilter === true;\n      }); // Filters top level and nested rows\n\n      var filterRows = function filterRows(filteredRows) {\n        filteredRows = filterMethod(filteredRows, filterableColumns.map(function (d) {\n          return d.id;\n        }), globalFilterValue);\n        filteredRows.forEach(function (row) {\n          filteredFlatRows.push(row);\n          filteredRowsById[row.id] = row;\n          row.subRows = row.subRows && row.subRows.length ? filterRows(row.subRows) : row.subRows;\n        });\n        return filteredRows;\n      };\n\n      return [filterRows(rows), filteredFlatRows, filteredRowsById];\n    }, [manualGlobalFilter, globalFilterValue, globalFilter, userFilterTypes, allColumns, rows, flatRows, rowsById, disableGlobalFilter]),\n        globalFilteredRows = _React$useMemo[0],\n        globalFilteredFlatRows = _React$useMemo[1],\n        globalFilteredRowsById = _React$useMemo[2];\n\n    var getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetGlobalFilter()) {\n        dispatch({\n          type: actions.resetGlobalFilter\n        });\n      }\n    }, [dispatch, manualGlobalFilter ? null : data]);\n    Object.assign(instance, {\n      preGlobalFilteredRows: rows,\n      preGlobalFilteredFlatRows: flatRows,\n      preGlobalFilteredRowsById: rowsById,\n      globalFilteredRows: globalFilteredRows,\n      globalFilteredFlatRows: globalFilteredFlatRows,\n      globalFilteredRowsById: globalFilteredRowsById,\n      rows: globalFilteredRows,\n      flatRows: globalFilteredFlatRows,\n      rowsById: globalFilteredRowsById,\n      setGlobalFilter: setGlobalFilter,\n      disableGlobalFilter: disableGlobalFilter\n    });\n  }\n\n  function sum(values, aggregatedValues) {\n    // It's faster to just add the aggregations together instead of\n    // process leaf nodes individually\n    return aggregatedValues.reduce(function (sum, next) {\n      return sum + (typeof next === 'number' ? next : 0);\n    }, 0);\n  }\n\n  function min(values) {\n    var min = values[0] || 0;\n    values.forEach(function (value) {\n      if (typeof value === 'number') {\n        min = Math.min(min, value);\n      }\n    });\n    return min;\n  }\n\n  function max(values) {\n    var max = values[0] || 0;\n    values.forEach(function (value) {\n      if (typeof value === 'number') {\n        max = Math.max(max, value);\n      }\n    });\n    return max;\n  }\n\n  function minMax(values) {\n    var min = values[0] || 0;\n    var max = values[0] || 0;\n    values.forEach(function (value) {\n      if (typeof value === 'number') {\n        min = Math.min(min, value);\n        max = Math.max(max, value);\n      }\n    });\n    return min + \"..\" + max;\n  }\n\n  function average(values) {\n    return sum(null, values) / values.length;\n  }\n\n  function median(values) {\n    if (!values.length) {\n      return null;\n    }\n\n    var mid = Math.floor(values.length / 2);\n    var nums = [].concat(values).sort(function (a, b) {\n      return a - b;\n    });\n    return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2;\n  }\n\n  function unique(values) {\n    return Array.from(new Set(values).values());\n  }\n\n  function uniqueCount(values) {\n    return new Set(values).size;\n  }\n\n  function count(values) {\n    return values.length;\n  }\n\n  var aggregations = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    sum: sum,\n    min: min,\n    max: max,\n    minMax: minMax,\n    average: average,\n    median: median,\n    unique: unique,\n    uniqueCount: uniqueCount,\n    count: count\n  });\n  var emptyArray = [];\n  var emptyObject = {}; // Actions\n\n  actions.resetGroupBy = 'resetGroupBy';\n  actions.setGroupBy = 'setGroupBy';\n  actions.toggleGroupBy = 'toggleGroupBy';\n\n  var useGroupBy = function useGroupBy(hooks) {\n    hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps];\n    hooks.stateReducers.push(reducer$4);\n    hooks.visibleColumnsDeps.push(function (deps, _ref) {\n      var instance = _ref.instance;\n      return [].concat(deps, [instance.state.groupBy]);\n    });\n    hooks.visibleColumns.push(visibleColumns);\n    hooks.useInstance.push(useInstance$4);\n    hooks.prepareRow.push(prepareRow$1);\n  };\n\n  useGroupBy.pluginName = 'useGroupBy';\n\n  var defaultGetGroupByToggleProps = function defaultGetGroupByToggleProps(props, _ref2) {\n    var header = _ref2.header;\n    return [props, {\n      onClick: header.canGroupBy ? function (e) {\n        e.persist();\n        header.toggleGroupBy();\n      } : undefined,\n      style: {\n        cursor: header.canGroupBy ? 'pointer' : undefined\n      },\n      title: 'Toggle GroupBy'\n    }];\n  }; // Reducer\n\n\n  function reducer$4(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        groupBy: []\n      }, state);\n    }\n\n    if (action.type === actions.resetGroupBy) {\n      return _extends({}, state, {\n        groupBy: instance.initialState.groupBy || []\n      });\n    }\n\n    if (action.type === actions.setGroupBy) {\n      var value = action.value;\n      return _extends({}, state, {\n        groupBy: value\n      });\n    }\n\n    if (action.type === actions.toggleGroupBy) {\n      var columnId = action.columnId,\n          setGroupBy = action.value;\n      var resolvedGroupBy = typeof setGroupBy !== 'undefined' ? setGroupBy : !state.groupBy.includes(columnId);\n\n      if (resolvedGroupBy) {\n        return _extends({}, state, {\n          groupBy: [].concat(state.groupBy, [columnId])\n        });\n      }\n\n      return _extends({}, state, {\n        groupBy: state.groupBy.filter(function (d) {\n          return d !== columnId;\n        })\n      });\n    }\n  }\n\n  function visibleColumns(columns, _ref3) {\n    var groupBy = _ref3.instance.state.groupBy; // Sort grouped columns to the start of the column list\n    // before the headers are built\n\n    var groupByColumns = groupBy.map(function (g) {\n      return columns.find(function (col) {\n        return col.id === g;\n      });\n    }).filter(Boolean);\n    var nonGroupByColumns = columns.filter(function (col) {\n      return !groupBy.includes(col.id);\n    });\n    columns = [].concat(groupByColumns, nonGroupByColumns);\n    columns.forEach(function (column) {\n      column.isGrouped = groupBy.includes(column.id);\n      column.groupedIndex = groupBy.indexOf(column.id);\n    });\n    return columns;\n  }\n\n  var defaultUserAggregations = {};\n\n  function useInstance$4(instance) {\n    var data = instance.data,\n        rows = instance.rows,\n        flatRows = instance.flatRows,\n        rowsById = instance.rowsById,\n        allColumns = instance.allColumns,\n        flatHeaders = instance.flatHeaders,\n        _instance$groupByFn = instance.groupByFn,\n        groupByFn = _instance$groupByFn === void 0 ? defaultGroupByFn : _instance$groupByFn,\n        manualGroupBy = instance.manualGroupBy,\n        _instance$aggregation = instance.aggregations,\n        userAggregations = _instance$aggregation === void 0 ? defaultUserAggregations : _instance$aggregation,\n        plugins = instance.plugins,\n        groupBy = instance.state.groupBy,\n        dispatch = instance.dispatch,\n        _instance$autoResetGr = instance.autoResetGroupBy,\n        autoResetGroupBy = _instance$autoResetGr === void 0 ? true : _instance$autoResetGr,\n        disableGroupBy = instance.disableGroupBy,\n        defaultCanGroupBy = instance.defaultCanGroupBy,\n        getHooks = instance.getHooks;\n    ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy');\n    var getInstance = useGetLatest(instance);\n    allColumns.forEach(function (column) {\n      var accessor = column.accessor,\n          defaultColumnGroupBy = column.defaultGroupBy,\n          columnDisableGroupBy = column.disableGroupBy;\n      column.canGroupBy = accessor ? getFirstDefined(column.canGroupBy, columnDisableGroupBy === true ? false : undefined, disableGroupBy === true ? false : undefined, true) : getFirstDefined(column.canGroupBy, defaultColumnGroupBy, defaultCanGroupBy, false);\n\n      if (column.canGroupBy) {\n        column.toggleGroupBy = function () {\n          return instance.toggleGroupBy(column.id);\n        };\n      }\n\n      column.Aggregated = column.Aggregated || column.Cell;\n    });\n    var toggleGroupBy = React.useCallback(function (columnId, value) {\n      dispatch({\n        type: actions.toggleGroupBy,\n        columnId: columnId,\n        value: value\n      });\n    }, [dispatch]);\n    var setGroupBy = React.useCallback(function (value) {\n      dispatch({\n        type: actions.setGroupBy,\n        value: value\n      });\n    }, [dispatch]);\n    flatHeaders.forEach(function (header) {\n      header.getGroupByToggleProps = makePropGetter(getHooks().getGroupByToggleProps, {\n        instance: getInstance(),\n        header: header\n      });\n    });\n\n    var _React$useMemo = React.useMemo(function () {\n      if (manualGroupBy || !groupBy.length) {\n        return [rows, flatRows, rowsById, emptyArray, emptyObject, flatRows, rowsById];\n      } // Ensure that the list of filtered columns exist\n\n\n      var existingGroupBy = groupBy.filter(function (g) {\n        return allColumns.find(function (col) {\n          return col.id === g;\n        });\n      }); // Find the columns that can or are aggregating\n      // Uses each column to aggregate rows into a single value\n\n      var aggregateRowsToValues = function aggregateRowsToValues(leafRows, groupedRows, depth) {\n        var values = {};\n        allColumns.forEach(function (column) {\n          // Don't aggregate columns that are in the groupBy\n          if (existingGroupBy.includes(column.id)) {\n            values[column.id] = groupedRows[0] ? groupedRows[0].values[column.id] : null;\n            return;\n          } // Aggregate the values\n\n\n          var aggregateFn = typeof column.aggregate === 'function' ? column.aggregate : userAggregations[column.aggregate] || aggregations[column.aggregate];\n\n          if (aggregateFn) {\n            // Get the columnValues to aggregate\n            var groupedValues = groupedRows.map(function (row) {\n              return row.values[column.id];\n            }); // Get the columnValues to aggregate\n\n            var leafValues = leafRows.map(function (row) {\n              var columnValue = row.values[column.id];\n\n              if (!depth && column.aggregateValue) {\n                var aggregateValueFn = typeof column.aggregateValue === 'function' ? column.aggregateValue : userAggregations[column.aggregateValue] || aggregations[column.aggregateValue];\n\n                if (!aggregateValueFn) {\n                  console.info({\n                    column: column\n                  });\n                  throw new Error(\"React Table: Invalid column.aggregateValue option for column listed above\");\n                }\n\n                columnValue = aggregateValueFn(columnValue, row, column);\n              }\n\n              return columnValue;\n            });\n            values[column.id] = aggregateFn(leafValues, groupedValues);\n          } else if (column.aggregate) {\n            console.info({\n              column: column\n            });\n            throw new Error(\"React Table: Invalid column.aggregate option for column listed above\");\n          } else {\n            values[column.id] = null;\n          }\n        });\n        return values;\n      };\n\n      var groupedFlatRows = [];\n      var groupedRowsById = {};\n      var onlyGroupedFlatRows = [];\n      var onlyGroupedRowsById = {};\n      var nonGroupedFlatRows = [];\n      var nonGroupedRowsById = {}; // Recursively group the data\n\n      var groupUpRecursively = function groupUpRecursively(rows, depth, parentId) {\n        if (depth === void 0) {\n          depth = 0;\n        } // This is the last level, just return the rows\n\n\n        if (depth === existingGroupBy.length) {\n          return rows;\n        }\n\n        var columnId = existingGroupBy[depth]; // Group the rows together for this level\n\n        var rowGroupsMap = groupByFn(rows, columnId); // Peform aggregations for each group\n\n        var aggregatedGroupedRows = Object.entries(rowGroupsMap).map(function (_ref4, index) {\n          var groupByVal = _ref4[0],\n              groupedRows = _ref4[1];\n          var id = columnId + \":\" + groupByVal;\n          id = parentId ? parentId + \">\" + id : id; // First, Recurse to group sub rows before aggregation\n\n          var subRows = groupUpRecursively(groupedRows, depth + 1, id); // Flatten the leaf rows of the rows in this group\n\n          var leafRows = depth ? flattenBy(groupedRows, 'leafRows') : groupedRows;\n          var values = aggregateRowsToValues(leafRows, groupedRows, depth);\n          var row = {\n            id: id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal: groupByVal,\n            values: values,\n            subRows: subRows,\n            leafRows: leafRows,\n            depth: depth,\n            index: index\n          };\n          subRows.forEach(function (subRow) {\n            groupedFlatRows.push(subRow);\n            groupedRowsById[subRow.id] = subRow;\n\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow);\n              onlyGroupedRowsById[subRow.id] = subRow;\n            } else {\n              nonGroupedFlatRows.push(subRow);\n              nonGroupedRowsById[subRow.id] = subRow;\n            }\n          });\n          return row;\n        });\n        return aggregatedGroupedRows;\n      };\n\n      var groupedRows = groupUpRecursively(rows);\n      groupedRows.forEach(function (subRow) {\n        groupedFlatRows.push(subRow);\n        groupedRowsById[subRow.id] = subRow;\n\n        if (subRow.isGrouped) {\n          onlyGroupedFlatRows.push(subRow);\n          onlyGroupedRowsById[subRow.id] = subRow;\n        } else {\n          nonGroupedFlatRows.push(subRow);\n          nonGroupedRowsById[subRow.id] = subRow;\n        }\n      }); // Assign the new data\n\n      return [groupedRows, groupedFlatRows, groupedRowsById, onlyGroupedFlatRows, onlyGroupedRowsById, nonGroupedFlatRows, nonGroupedRowsById];\n    }, [manualGroupBy, groupBy, rows, flatRows, rowsById, allColumns, userAggregations, groupByFn]),\n        groupedRows = _React$useMemo[0],\n        groupedFlatRows = _React$useMemo[1],\n        groupedRowsById = _React$useMemo[2],\n        onlyGroupedFlatRows = _React$useMemo[3],\n        onlyGroupedRowsById = _React$useMemo[4],\n        nonGroupedFlatRows = _React$useMemo[5],\n        nonGroupedRowsById = _React$useMemo[6];\n\n    var getAutoResetGroupBy = useGetLatest(autoResetGroupBy);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetGroupBy()) {\n        dispatch({\n          type: actions.resetGroupBy\n        });\n      }\n    }, [dispatch, manualGroupBy ? null : data]);\n    Object.assign(instance, {\n      preGroupedRows: rows,\n      preGroupedFlatRow: flatRows,\n      preGroupedRowsById: rowsById,\n      groupedRows: groupedRows,\n      groupedFlatRows: groupedFlatRows,\n      groupedRowsById: groupedRowsById,\n      onlyGroupedFlatRows: onlyGroupedFlatRows,\n      onlyGroupedRowsById: onlyGroupedRowsById,\n      nonGroupedFlatRows: nonGroupedFlatRows,\n      nonGroupedRowsById: nonGroupedRowsById,\n      rows: groupedRows,\n      flatRows: groupedFlatRows,\n      rowsById: groupedRowsById,\n      toggleGroupBy: toggleGroupBy,\n      setGroupBy: setGroupBy\n    });\n  }\n\n  function prepareRow$1(row) {\n    row.allCells.forEach(function (cell) {\n      var _row$subRows; // Grouped cells are in the groupBy and the pivot cell for the row\n\n\n      cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID; // Placeholder cells are any columns in the groupBy that are not grouped\n\n      cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped; // Aggregated cells are not grouped, not repeated, but still have subRows\n\n      cell.isAggregated = !cell.isGrouped && !cell.isPlaceholder && ((_row$subRows = row.subRows) == null ? void 0 : _row$subRows.length);\n    });\n  }\n\n  function defaultGroupByFn(rows, columnId) {\n    return rows.reduce(function (prev, row, i) {\n      // TODO: Might want to implement a key serializer here so\n      // irregular column values can still be grouped if needed?\n      var resKey = \"\" + row.values[columnId];\n      prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : [];\n      prev[resKey].push(row);\n      return prev;\n    }, {});\n  }\n\n  var reSplitAlphaNumeric = /([0-9]+)/gm; // Mixed sorting is slow, but very inclusive of many edge cases.\n  // It handles numbers, mixed alphanumeric combinations, and even\n  // null, undefined, and Infinity\n\n  var alphanumeric = function alphanumeric(rowA, rowB, columnId) {\n    var _getRowValuesByColumn = getRowValuesByColumnID(rowA, rowB, columnId),\n        a = _getRowValuesByColumn[0],\n        b = _getRowValuesByColumn[1]; // Force to strings (or \"\" for unsupported types)\n\n\n    a = toString(a);\n    b = toString(b); // Split on number groups, but keep the delimiter\n    // Then remove falsey split values\n\n    a = a.split(reSplitAlphaNumeric).filter(Boolean);\n    b = b.split(reSplitAlphaNumeric).filter(Boolean); // While\n\n    while (a.length && b.length) {\n      var aa = a.shift();\n      var bb = b.shift();\n      var an = parseInt(aa, 10);\n      var bn = parseInt(bb, 10);\n      var combo = [an, bn].sort(); // Both are string\n\n      if (isNaN(combo[0])) {\n        if (aa > bb) {\n          return 1;\n        }\n\n        if (bb > aa) {\n          return -1;\n        }\n\n        continue;\n      } // One is a string, one is a number\n\n\n      if (isNaN(combo[1])) {\n        return isNaN(an) ? -1 : 1;\n      } // Both are numbers\n\n\n      if (an > bn) {\n        return 1;\n      }\n\n      if (bn > an) {\n        return -1;\n      }\n    }\n\n    return a.length - b.length;\n  };\n\n  function datetime(rowA, rowB, columnId) {\n    var _getRowValuesByColumn2 = getRowValuesByColumnID(rowA, rowB, columnId),\n        a = _getRowValuesByColumn2[0],\n        b = _getRowValuesByColumn2[1];\n\n    a = a.getTime();\n    b = b.getTime();\n    return compareBasic(a, b);\n  }\n\n  function basic(rowA, rowB, columnId) {\n    var _getRowValuesByColumn3 = getRowValuesByColumnID(rowA, rowB, columnId),\n        a = _getRowValuesByColumn3[0],\n        b = _getRowValuesByColumn3[1];\n\n    return compareBasic(a, b);\n  }\n\n  function string(rowA, rowB, columnId) {\n    var _getRowValuesByColumn4 = getRowValuesByColumnID(rowA, rowB, columnId),\n        a = _getRowValuesByColumn4[0],\n        b = _getRowValuesByColumn4[1];\n\n    a = a.split('').filter(Boolean);\n    b = b.split('').filter(Boolean);\n\n    while (a.length && b.length) {\n      var aa = a.shift();\n      var bb = b.shift();\n      var alower = aa.toLowerCase();\n      var blower = bb.toLowerCase(); // Case insensitive comparison until characters match\n\n      if (alower > blower) {\n        return 1;\n      }\n\n      if (blower > alower) {\n        return -1;\n      } // If lowercase characters are identical\n\n\n      if (aa > bb) {\n        return 1;\n      }\n\n      if (bb > aa) {\n        return -1;\n      }\n\n      continue;\n    }\n\n    return a.length - b.length;\n  }\n\n  function number(rowA, rowB, columnId) {\n    var _getRowValuesByColumn5 = getRowValuesByColumnID(rowA, rowB, columnId),\n        a = _getRowValuesByColumn5[0],\n        b = _getRowValuesByColumn5[1];\n\n    var replaceNonNumeric = /[^0-9.]/gi;\n    a = Number(String(a).replace(replaceNonNumeric, ''));\n    b = Number(String(b).replace(replaceNonNumeric, ''));\n    return compareBasic(a, b);\n  } // Utils\n\n\n  function compareBasic(a, b) {\n    return a === b ? 0 : a > b ? 1 : -1;\n  }\n\n  function getRowValuesByColumnID(row1, row2, columnId) {\n    return [row1.values[columnId], row2.values[columnId]];\n  }\n\n  function toString(a) {\n    if (typeof a === 'number') {\n      if (isNaN(a) || a === Infinity || a === -Infinity) {\n        return '';\n      }\n\n      return String(a);\n    }\n\n    if (typeof a === 'string') {\n      return a;\n    }\n\n    return '';\n  }\n\n  var sortTypes = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    alphanumeric: alphanumeric,\n    datetime: datetime,\n    basic: basic,\n    string: string,\n    number: number\n  });\n  actions.resetSortBy = 'resetSortBy';\n  actions.setSortBy = 'setSortBy';\n  actions.toggleSortBy = 'toggleSortBy';\n  actions.clearSortBy = 'clearSortBy';\n  defaultColumn.sortType = 'alphanumeric';\n  defaultColumn.sortDescFirst = false;\n\n  var useSortBy = function useSortBy(hooks) {\n    hooks.getSortByToggleProps = [defaultGetSortByToggleProps];\n    hooks.stateReducers.push(reducer$5);\n    hooks.useInstance.push(useInstance$5);\n  };\n\n  useSortBy.pluginName = 'useSortBy';\n\n  var defaultGetSortByToggleProps = function defaultGetSortByToggleProps(props, _ref) {\n    var instance = _ref.instance,\n        column = _ref.column;\n    var _instance$isMultiSort = instance.isMultiSortEvent,\n        isMultiSortEvent = _instance$isMultiSort === void 0 ? function (e) {\n      return e.shiftKey;\n    } : _instance$isMultiSort;\n    return [props, {\n      onClick: column.canSort ? function (e) {\n        e.persist();\n        column.toggleSortBy(undefined, !instance.disableMultiSort && isMultiSortEvent(e));\n      } : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined\n    }];\n  }; // Reducer\n\n\n  function reducer$5(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        sortBy: []\n      }, state);\n    }\n\n    if (action.type === actions.resetSortBy) {\n      return _extends({}, state, {\n        sortBy: instance.initialState.sortBy || []\n      });\n    }\n\n    if (action.type === actions.clearSortBy) {\n      var sortBy = state.sortBy;\n      var newSortBy = sortBy.filter(function (d) {\n        return d.id !== action.columnId;\n      });\n      return _extends({}, state, {\n        sortBy: newSortBy\n      });\n    }\n\n    if (action.type === actions.setSortBy) {\n      var _sortBy = action.sortBy;\n      return _extends({}, state, {\n        sortBy: _sortBy\n      });\n    }\n\n    if (action.type === actions.toggleSortBy) {\n      var columnId = action.columnId,\n          desc = action.desc,\n          multi = action.multi;\n      var allColumns = instance.allColumns,\n          disableMultiSort = instance.disableMultiSort,\n          disableSortRemove = instance.disableSortRemove,\n          disableMultiRemove = instance.disableMultiRemove,\n          _instance$maxMultiSor = instance.maxMultiSortColCount,\n          maxMultiSortColCount = _instance$maxMultiSor === void 0 ? Number.MAX_SAFE_INTEGER : _instance$maxMultiSor;\n      var _sortBy2 = state.sortBy; // Find the column for this columnId\n\n      var column = allColumns.find(function (d) {\n        return d.id === columnId;\n      });\n      var sortDescFirst = column.sortDescFirst; // Find any existing sortBy for this column\n\n      var existingSortBy = _sortBy2.find(function (d) {\n        return d.id === columnId;\n      });\n\n      var existingIndex = _sortBy2.findIndex(function (d) {\n        return d.id === columnId;\n      });\n\n      var hasDescDefined = typeof desc !== 'undefined' && desc !== null;\n      var _newSortBy = []; // What should we do with this sort action?\n\n      var sortAction;\n\n      if (!disableMultiSort && multi) {\n        if (existingSortBy) {\n          sortAction = 'toggle';\n        } else {\n          sortAction = 'add';\n        }\n      } else {\n        // Normal mode\n        if (existingIndex !== _sortBy2.length - 1 || _sortBy2.length !== 1) {\n          sortAction = 'replace';\n        } else if (existingSortBy) {\n          sortAction = 'toggle';\n        } else {\n          sortAction = 'replace';\n        }\n      } // Handle toggle states that will remove the sortBy\n\n\n      if (sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && ( // Must not be setting desc\n      multi ? !disableMultiRemove : true) && ( // If multi, don't allow if disableMultiRemove\n      existingSortBy && // Finally, detect if it should indeed be removed\n      existingSortBy.desc && !sortDescFirst || !existingSortBy.desc && sortDescFirst)) {\n        sortAction = 'remove';\n      }\n\n      if (sortAction === 'replace') {\n        _newSortBy = [{\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst\n        }];\n      } else if (sortAction === 'add') {\n        _newSortBy = [].concat(_sortBy2, [{\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst\n        }]); // Take latest n columns\n\n        _newSortBy.splice(0, _newSortBy.length - maxMultiSortColCount);\n      } else if (sortAction === 'toggle') {\n        // This flips (or sets) the\n        _newSortBy = _sortBy2.map(function (d) {\n          if (d.id === columnId) {\n            return _extends({}, d, {\n              desc: hasDescDefined ? desc : !existingSortBy.desc\n            });\n          }\n\n          return d;\n        });\n      } else if (sortAction === 'remove') {\n        _newSortBy = _sortBy2.filter(function (d) {\n          return d.id !== columnId;\n        });\n      }\n\n      return _extends({}, state, {\n        sortBy: _newSortBy\n      });\n    }\n  }\n\n  function useInstance$5(instance) {\n    var data = instance.data,\n        rows = instance.rows,\n        flatRows = instance.flatRows,\n        allColumns = instance.allColumns,\n        _instance$orderByFn = instance.orderByFn,\n        orderByFn = _instance$orderByFn === void 0 ? defaultOrderByFn : _instance$orderByFn,\n        userSortTypes = instance.sortTypes,\n        manualSortBy = instance.manualSortBy,\n        defaultCanSort = instance.defaultCanSort,\n        disableSortBy = instance.disableSortBy,\n        flatHeaders = instance.flatHeaders,\n        sortBy = instance.state.sortBy,\n        dispatch = instance.dispatch,\n        plugins = instance.plugins,\n        getHooks = instance.getHooks,\n        _instance$autoResetSo = instance.autoResetSortBy,\n        autoResetSortBy = _instance$autoResetSo === void 0 ? true : _instance$autoResetSo;\n    ensurePluginOrder(plugins, ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'], 'useSortBy');\n    var setSortBy = React.useCallback(function (sortBy) {\n      dispatch({\n        type: actions.setSortBy,\n        sortBy: sortBy\n      });\n    }, [dispatch]); // Updates sorting based on a columnId, desc flag and multi flag\n\n    var toggleSortBy = React.useCallback(function (columnId, desc, multi) {\n      dispatch({\n        type: actions.toggleSortBy,\n        columnId: columnId,\n        desc: desc,\n        multi: multi\n      });\n    }, [dispatch]); // use reference to avoid memory leak in #1608\n\n    var getInstance = useGetLatest(instance); // Add the getSortByToggleProps method to columns and headers\n\n    flatHeaders.forEach(function (column) {\n      var accessor = column.accessor,\n          defaultColumnCanSort = column.canSort,\n          columnDisableSortBy = column.disableSortBy,\n          id = column.id;\n      var canSort = accessor ? getFirstDefined(columnDisableSortBy === true ? false : undefined, disableSortBy === true ? false : undefined, true) : getFirstDefined(defaultCanSort, defaultColumnCanSort, false);\n      column.canSort = canSort;\n\n      if (column.canSort) {\n        column.toggleSortBy = function (desc, multi) {\n          return toggleSortBy(column.id, desc, multi);\n        };\n\n        column.clearSortBy = function () {\n          dispatch({\n            type: actions.clearSortBy,\n            columnId: column.id\n          });\n        };\n      }\n\n      column.getSortByToggleProps = makePropGetter(getHooks().getSortByToggleProps, {\n        instance: getInstance(),\n        column: column\n      });\n      var columnSort = sortBy.find(function (d) {\n        return d.id === id;\n      });\n      column.isSorted = !!columnSort;\n      column.sortedIndex = sortBy.findIndex(function (d) {\n        return d.id === id;\n      });\n      column.isSortedDesc = column.isSorted ? columnSort.desc : undefined;\n    });\n\n    var _React$useMemo = React.useMemo(function () {\n      if (manualSortBy || !sortBy.length) {\n        return [rows, flatRows];\n      }\n\n      var sortedFlatRows = []; // Filter out sortBys that correspond to non existing columns\n\n      var availableSortBy = sortBy.filter(function (sort) {\n        return allColumns.find(function (col) {\n          return col.id === sort.id;\n        });\n      });\n\n      var sortData = function sortData(rows) {\n        // Use the orderByFn to compose multiple sortBy's together.\n        // This will also perform a stable sorting using the row index\n        // if needed.\n        var sortedData = orderByFn(rows, availableSortBy.map(function (sort) {\n          // Support custom sorting methods for each column\n          var column = allColumns.find(function (d) {\n            return d.id === sort.id;\n          });\n\n          if (!column) {\n            throw new Error(\"React-Table: Could not find a column with id: \" + sort.id + \" while sorting\");\n          }\n\n          var sortType = column.sortType; // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n\n          var sortMethod = isFunction(sortType) || (userSortTypes || {})[sortType] || sortTypes[sortType];\n\n          if (!sortMethod) {\n            throw new Error(\"React-Table: Could not find a valid sortType of '\" + sortType + \"' for column '\" + sort.id + \"'.\");\n          } // Return the correct sortFn.\n          // This function should always return in ascending order\n\n\n          return function (a, b) {\n            return sortMethod(a, b, sort.id, sort.desc);\n          };\n        }), // Map the directions\n        availableSortBy.map(function (sort) {\n          // Detect and use the sortInverted option\n          var column = allColumns.find(function (d) {\n            return d.id === sort.id;\n          });\n\n          if (column && column.sortInverted) {\n            return sort.desc;\n          }\n\n          return !sort.desc;\n        })); // If there are sub-rows, sort them\n\n        sortedData.forEach(function (row) {\n          sortedFlatRows.push(row);\n\n          if (!row.subRows || row.subRows.length === 0) {\n            return;\n          }\n\n          row.subRows = sortData(row.subRows);\n        });\n        return sortedData;\n      };\n\n      return [sortData(rows), sortedFlatRows];\n    }, [manualSortBy, sortBy, rows, flatRows, allColumns, orderByFn, userSortTypes]),\n        sortedRows = _React$useMemo[0],\n        sortedFlatRows = _React$useMemo[1];\n\n    var getAutoResetSortBy = useGetLatest(autoResetSortBy);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetSortBy()) {\n        dispatch({\n          type: actions.resetSortBy\n        });\n      }\n    }, [manualSortBy ? null : data]);\n    Object.assign(instance, {\n      preSortedRows: rows,\n      preSortedFlatRows: flatRows,\n      sortedRows: sortedRows,\n      sortedFlatRows: sortedFlatRows,\n      rows: sortedRows,\n      flatRows: sortedFlatRows,\n      setSortBy: setSortBy,\n      toggleSortBy: toggleSortBy\n    });\n  }\n\n  function defaultOrderByFn(arr, funcs, dirs) {\n    return [].concat(arr).sort(function (rowA, rowB) {\n      for (var i = 0; i < funcs.length; i += 1) {\n        var sortFn = funcs[i];\n        var desc = dirs[i] === false || dirs[i] === 'desc';\n        var sortInt = sortFn(rowA, rowB);\n\n        if (sortInt !== 0) {\n          return desc ? -sortInt : sortInt;\n        }\n      }\n\n      return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index;\n    });\n  }\n\n  var pluginName = 'usePagination'; // Actions\n\n  actions.resetPage = 'resetPage';\n  actions.gotoPage = 'gotoPage';\n  actions.setPageSize = 'setPageSize';\n\n  var usePagination = function usePagination(hooks) {\n    hooks.stateReducers.push(reducer$6);\n    hooks.useInstance.push(useInstance$6);\n  };\n\n  usePagination.pluginName = pluginName;\n\n  function reducer$6(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        pageSize: 10,\n        pageIndex: 0\n      }, state);\n    }\n\n    if (action.type === actions.resetPage) {\n      return _extends({}, state, {\n        pageIndex: instance.initialState.pageIndex || 0\n      });\n    }\n\n    if (action.type === actions.gotoPage) {\n      var pageCount = instance.pageCount,\n          page = instance.page;\n      var newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex);\n      var canNavigate = false;\n\n      if (newPageIndex > state.pageIndex) {\n        // next page\n        canNavigate = pageCount === -1 ? page.length >= state.pageSize : newPageIndex < pageCount;\n      } else if (newPageIndex < state.pageIndex) {\n        // prev page\n        canNavigate = newPageIndex > -1;\n      }\n\n      if (!canNavigate) {\n        return state;\n      }\n\n      return _extends({}, state, {\n        pageIndex: newPageIndex\n      });\n    }\n\n    if (action.type === actions.setPageSize) {\n      var pageSize = action.pageSize;\n      var topRowIndex = state.pageSize * state.pageIndex;\n      var pageIndex = Math.floor(topRowIndex / pageSize);\n      return _extends({}, state, {\n        pageIndex: pageIndex,\n        pageSize: pageSize\n      });\n    }\n  }\n\n  function useInstance$6(instance) {\n    var rows = instance.rows,\n        _instance$autoResetPa = instance.autoResetPage,\n        autoResetPage = _instance$autoResetPa === void 0 ? true : _instance$autoResetPa,\n        _instance$manualExpan = instance.manualExpandedKey,\n        manualExpandedKey = _instance$manualExpan === void 0 ? 'expanded' : _instance$manualExpan,\n        plugins = instance.plugins,\n        userPageCount = instance.pageCount,\n        _instance$paginateExp = instance.paginateExpandedRows,\n        paginateExpandedRows = _instance$paginateExp === void 0 ? true : _instance$paginateExp,\n        _instance$expandSubRo = instance.expandSubRows,\n        expandSubRows = _instance$expandSubRo === void 0 ? true : _instance$expandSubRo,\n        _instance$state = instance.state,\n        pageSize = _instance$state.pageSize,\n        pageIndex = _instance$state.pageIndex,\n        expanded = _instance$state.expanded,\n        globalFilter = _instance$state.globalFilter,\n        filters = _instance$state.filters,\n        groupBy = _instance$state.groupBy,\n        sortBy = _instance$state.sortBy,\n        dispatch = instance.dispatch,\n        data = instance.data,\n        manualPagination = instance.manualPagination;\n    ensurePluginOrder(plugins, ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'], 'usePagination');\n    var getAutoResetPage = useGetLatest(autoResetPage);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetPage()) {\n        dispatch({\n          type: actions.resetPage\n        });\n      }\n    }, [dispatch, manualPagination ? null : data, globalFilter, filters, groupBy, sortBy]);\n    var pageCount = manualPagination ? userPageCount : Math.ceil(rows.length / pageSize);\n    var pageOptions = React.useMemo(function () {\n      return pageCount > 0 ? [].concat(new Array(pageCount)).fill(null).map(function (d, i) {\n        return i;\n      }) : [];\n    }, [pageCount]);\n    var page = React.useMemo(function () {\n      var page;\n\n      if (manualPagination) {\n        page = rows;\n      } else {\n        var pageStart = pageSize * pageIndex;\n        var pageEnd = pageStart + pageSize;\n        page = rows.slice(pageStart, pageEnd);\n      }\n\n      if (paginateExpandedRows) {\n        return page;\n      }\n\n      return expandRows(page, {\n        manualExpandedKey: manualExpandedKey,\n        expanded: expanded,\n        expandSubRows: expandSubRows\n      });\n    }, [expandSubRows, expanded, manualExpandedKey, manualPagination, pageIndex, pageSize, paginateExpandedRows, rows]);\n    var canPreviousPage = pageIndex > 0;\n    var canNextPage = pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1;\n    var gotoPage = React.useCallback(function (pageIndex) {\n      dispatch({\n        type: actions.gotoPage,\n        pageIndex: pageIndex\n      });\n    }, [dispatch]);\n    var previousPage = React.useCallback(function () {\n      return gotoPage(function (old) {\n        return old - 1;\n      });\n    }, [gotoPage]);\n    var nextPage = React.useCallback(function () {\n      return gotoPage(function (old) {\n        return old + 1;\n      });\n    }, [gotoPage]);\n    var setPageSize = React.useCallback(function (pageSize) {\n      dispatch({\n        type: actions.setPageSize,\n        pageSize: pageSize\n      });\n    }, [dispatch]);\n    Object.assign(instance, {\n      pageOptions: pageOptions,\n      pageCount: pageCount,\n      page: page,\n      canPreviousPage: canPreviousPage,\n      canNextPage: canNextPage,\n      gotoPage: gotoPage,\n      previousPage: previousPage,\n      nextPage: nextPage,\n      setPageSize: setPageSize\n    });\n  }\n\n  actions.resetPivot = 'resetPivot';\n  actions.togglePivot = 'togglePivot';\n\n  var _UNSTABLE_usePivotColumns = function _UNSTABLE_usePivotColumns(hooks) {\n    hooks.getPivotToggleProps = [defaultGetPivotToggleProps];\n    hooks.stateReducers.push(reducer$7);\n    hooks.useInstanceAfterData.push(useInstanceAfterData);\n    hooks.allColumns.push(allColumns);\n    hooks.accessValue.push(accessValue);\n    hooks.materializedColumns.push(materializedColumns);\n    hooks.materializedColumnsDeps.push(materializedColumnsDeps);\n    hooks.visibleColumns.push(visibleColumns$1);\n    hooks.visibleColumnsDeps.push(visibleColumnsDeps);\n    hooks.useInstance.push(useInstance$7);\n    hooks.prepareRow.push(prepareRow$2);\n  };\n\n  _UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns';\n  var defaultPivotColumns = [];\n\n  var defaultGetPivotToggleProps = function defaultGetPivotToggleProps(props, _ref) {\n    var header = _ref.header;\n    return [props, {\n      onClick: header.canPivot ? function (e) {\n        e.persist();\n        header.togglePivot();\n      } : undefined,\n      style: {\n        cursor: header.canPivot ? 'pointer' : undefined\n      },\n      title: 'Toggle Pivot'\n    }];\n  }; // Reducer\n\n\n  function reducer$7(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        pivotColumns: defaultPivotColumns\n      }, state);\n    }\n\n    if (action.type === actions.resetPivot) {\n      return _extends({}, state, {\n        pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns\n      });\n    }\n\n    if (action.type === actions.togglePivot) {\n      var columnId = action.columnId,\n          setPivot = action.value;\n      var resolvedPivot = typeof setPivot !== 'undefined' ? setPivot : !state.pivotColumns.includes(columnId);\n\n      if (resolvedPivot) {\n        return _extends({}, state, {\n          pivotColumns: [].concat(state.pivotColumns, [columnId])\n        });\n      }\n\n      return _extends({}, state, {\n        pivotColumns: state.pivotColumns.filter(function (d) {\n          return d !== columnId;\n        })\n      });\n    }\n  }\n\n  function useInstanceAfterData(instance) {\n    instance.allColumns.forEach(function (column) {\n      column.isPivotSource = instance.state.pivotColumns.includes(column.id);\n    });\n  }\n\n  function allColumns(columns, _ref2) {\n    var instance = _ref2.instance;\n    columns.forEach(function (column) {\n      column.isPivotSource = instance.state.pivotColumns.includes(column.id);\n      column.uniqueValues = new Set();\n    });\n    return columns;\n  }\n\n  function accessValue(value, _ref3) {\n    var column = _ref3.column;\n\n    if (column.uniqueValues && typeof value !== 'undefined') {\n      column.uniqueValues.add(value);\n    }\n\n    return value;\n  }\n\n  function materializedColumns(materialized, _ref4) {\n    var instance = _ref4.instance;\n    var allColumns = instance.allColumns,\n        state = instance.state;\n\n    if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n      return materialized;\n    }\n\n    var pivotColumns = state.pivotColumns.map(function (id) {\n      return allColumns.find(function (d) {\n        return d.id === id;\n      });\n    }).filter(Boolean);\n    var sourceColumns = allColumns.filter(function (d) {\n      return !d.isPivotSource && !state.groupBy.includes(d.id) && !state.pivotColumns.includes(d.id);\n    });\n\n    var buildPivotColumns = function buildPivotColumns(depth, parent, pivotFilters) {\n      if (depth === void 0) {\n        depth = 0;\n      }\n\n      if (pivotFilters === void 0) {\n        pivotFilters = [];\n      }\n\n      var pivotColumn = pivotColumns[depth];\n\n      if (!pivotColumn) {\n        return sourceColumns.map(function (sourceColumn) {\n          // TODO: We could offer support here for renesting pivoted\n          // columns inside copies of their header groups. For now,\n          // that seems like it would be (1) overkill on nesting, considering\n          // you already get nesting for every pivot level and (2)\n          // really hard. :)\n          return _extends({}, sourceColumn, {\n            canPivot: false,\n            isPivoted: true,\n            parent: parent,\n            depth: depth,\n            id: \"\" + (parent ? parent.id + \".\" + sourceColumn.id : sourceColumn.id),\n            accessor: function accessor(originalRow, i, row) {\n              if (pivotFilters.every(function (filter) {\n                return filter(row);\n              })) {\n                return row.values[sourceColumn.id];\n              }\n            }\n          });\n        });\n      }\n\n      var uniqueValues = Array.from(pivotColumn.uniqueValues).sort();\n      return uniqueValues.map(function (uniqueValue) {\n        var columnGroup = _extends({}, pivotColumn, {\n          Header: pivotColumn.PivotHeader || typeof pivotColumn.header === 'string' ? pivotColumn.Header + \": \" + uniqueValue : uniqueValue,\n          isPivotGroup: true,\n          parent: parent,\n          depth: depth,\n          id: parent ? parent.id + \".\" + pivotColumn.id + \".\" + uniqueValue : pivotColumn.id + \".\" + uniqueValue,\n          pivotValue: uniqueValue\n        });\n\n        columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [].concat(pivotFilters, [function (row) {\n          return row.values[pivotColumn.id] === uniqueValue;\n        }]));\n        return columnGroup;\n      });\n    };\n\n    var newMaterialized = flattenColumns(buildPivotColumns());\n    return [].concat(materialized, newMaterialized);\n  }\n\n  function materializedColumnsDeps(deps, _ref5) {\n    var _ref5$instance$state = _ref5.instance.state,\n        pivotColumns = _ref5$instance$state.pivotColumns,\n        groupBy = _ref5$instance$state.groupBy;\n    return [].concat(deps, [pivotColumns, groupBy]);\n  }\n\n  function visibleColumns$1(visibleColumns, _ref6) {\n    var state = _ref6.instance.state;\n    visibleColumns = visibleColumns.filter(function (d) {\n      return !d.isPivotSource;\n    });\n\n    if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n      visibleColumns = visibleColumns.filter(function (column) {\n        return column.isGrouped || column.isPivoted;\n      });\n    }\n\n    return visibleColumns;\n  }\n\n  function visibleColumnsDeps(deps, _ref7) {\n    var instance = _ref7.instance;\n    return [].concat(deps, [instance.state.pivotColumns, instance.state.groupBy]);\n  }\n\n  function useInstance$7(instance) {\n    var columns = instance.columns,\n        allColumns = instance.allColumns,\n        flatHeaders = instance.flatHeaders,\n        getHooks = instance.getHooks,\n        plugins = instance.plugins,\n        dispatch = instance.dispatch,\n        _instance$autoResetPi = instance.autoResetPivot,\n        autoResetPivot = _instance$autoResetPi === void 0 ? true : _instance$autoResetPi,\n        manaulPivot = instance.manaulPivot,\n        disablePivot = instance.disablePivot,\n        defaultCanPivot = instance.defaultCanPivot;\n    ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns');\n    var getInstance = useGetLatest(instance);\n    allColumns.forEach(function (column) {\n      var accessor = column.accessor,\n          defaultColumnPivot = column.defaultPivot,\n          columnDisablePivot = column.disablePivot;\n      column.canPivot = accessor ? getFirstDefined(column.canPivot, columnDisablePivot === true ? false : undefined, disablePivot === true ? false : undefined, true) : getFirstDefined(column.canPivot, defaultColumnPivot, defaultCanPivot, false);\n\n      if (column.canPivot) {\n        column.togglePivot = function () {\n          return instance.togglePivot(column.id);\n        };\n      }\n\n      column.Aggregated = column.Aggregated || column.Cell;\n    });\n\n    var togglePivot = function togglePivot(columnId, value) {\n      dispatch({\n        type: actions.togglePivot,\n        columnId: columnId,\n        value: value\n      });\n    };\n\n    flatHeaders.forEach(function (header) {\n      header.getPivotToggleProps = makePropGetter(getHooks().getPivotToggleProps, {\n        instance: getInstance(),\n        header: header\n      });\n    });\n    var getAutoResetPivot = useGetLatest(autoResetPivot);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetPivot()) {\n        dispatch({\n          type: actions.resetPivot\n        });\n      }\n    }, [dispatch, manaulPivot ? null : columns]);\n    Object.assign(instance, {\n      togglePivot: togglePivot\n    });\n  }\n\n  function prepareRow$2(row) {\n    row.allCells.forEach(function (cell) {\n      // Grouped cells are in the pivotColumns and the pivot cell for the row\n      cell.isPivoted = cell.column.isPivoted;\n    });\n  }\n\n  var pluginName$1 = 'useRowSelect'; // Actions\n\n  actions.resetSelectedRows = 'resetSelectedRows';\n  actions.toggleAllRowsSelected = 'toggleAllRowsSelected';\n  actions.toggleRowSelected = 'toggleRowSelected';\n  actions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected';\n\n  var useRowSelect = function useRowSelect(hooks) {\n    hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps];\n    hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps];\n    hooks.getToggleAllPageRowsSelectedProps = [defaultGetToggleAllPageRowsSelectedProps];\n    hooks.stateReducers.push(reducer$8);\n    hooks.useInstance.push(useInstance$8);\n    hooks.prepareRow.push(prepareRow$3);\n  };\n\n  useRowSelect.pluginName = pluginName$1;\n\n  var defaultGetToggleRowSelectedProps = function defaultGetToggleRowSelectedProps(props, _ref) {\n    var instance = _ref.instance,\n        row = _ref.row;\n    var _instance$manualRowSe = instance.manualRowSelectedKey,\n        manualRowSelectedKey = _instance$manualRowSe === void 0 ? 'isSelected' : _instance$manualRowSe;\n    var checked = false;\n\n    if (row.original && row.original[manualRowSelectedKey]) {\n      checked = true;\n    } else {\n      checked = row.isSelected;\n    }\n\n    return [props, {\n      onChange: function onChange(e) {\n        row.toggleRowSelected(e.target.checked);\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      checked: checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected\n    }];\n  };\n\n  var defaultGetToggleAllRowsSelectedProps = function defaultGetToggleAllRowsSelectedProps(props, _ref2) {\n    var instance = _ref2.instance;\n    return [props, {\n      onChange: function onChange(e) {\n        instance.toggleAllRowsSelected(e.target.checked);\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      checked: instance.isAllRowsSelected,\n      title: 'Toggle All Rows Selected',\n      indeterminate: Boolean(!instance.isAllRowsSelected && Object.keys(instance.state.selectedRowIds).length)\n    }];\n  };\n\n  var defaultGetToggleAllPageRowsSelectedProps = function defaultGetToggleAllPageRowsSelectedProps(props, _ref3) {\n    var instance = _ref3.instance;\n    return [props, {\n      onChange: function onChange(e) {\n        instance.toggleAllPageRowsSelected(e.target.checked);\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      checked: instance.isAllPageRowsSelected,\n      title: 'Toggle All Current Page Rows Selected',\n      indeterminate: Boolean(!instance.isAllPageRowsSelected && instance.page.some(function (_ref4) {\n        var id = _ref4.id;\n        return instance.state.selectedRowIds[id];\n      }))\n    }];\n  }; // eslint-disable-next-line max-params\n\n\n  function reducer$8(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        selectedRowIds: {}\n      }, state);\n    }\n\n    if (action.type === actions.resetSelectedRows) {\n      return _extends({}, state, {\n        selectedRowIds: instance.initialState.selectedRowIds || {}\n      });\n    }\n\n    if (action.type === actions.toggleAllRowsSelected) {\n      var setSelected = action.value;\n      var isAllRowsSelected = instance.isAllRowsSelected,\n          rowsById = instance.rowsById,\n          _instance$nonGroupedR = instance.nonGroupedRowsById,\n          nonGroupedRowsById = _instance$nonGroupedR === void 0 ? rowsById : _instance$nonGroupedR;\n      var selectAll = typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected; // Only remove/add the rows that are visible on the screen\n      //  Leave all the other rows that are selected alone.\n\n      var selectedRowIds = Object.assign({}, state.selectedRowIds);\n\n      if (selectAll) {\n        Object.keys(nonGroupedRowsById).forEach(function (rowId) {\n          selectedRowIds[rowId] = true;\n        });\n      } else {\n        Object.keys(nonGroupedRowsById).forEach(function (rowId) {\n          delete selectedRowIds[rowId];\n        });\n      }\n\n      return _extends({}, state, {\n        selectedRowIds: selectedRowIds\n      });\n    }\n\n    if (action.type === actions.toggleRowSelected) {\n      var id = action.id,\n          _setSelected = action.value;\n      var _rowsById = instance.rowsById,\n          _instance$selectSubRo = instance.selectSubRows,\n          selectSubRows = _instance$selectSubRo === void 0 ? true : _instance$selectSubRo,\n          getSubRows = instance.getSubRows;\n      var isSelected = state.selectedRowIds[id];\n      var shouldExist = typeof _setSelected !== 'undefined' ? _setSelected : !isSelected;\n\n      if (isSelected === shouldExist) {\n        return state;\n      }\n\n      var newSelectedRowIds = _extends({}, state.selectedRowIds);\n\n      var handleRowById = function handleRowById(id) {\n        var row = _rowsById[id];\n\n        if (!row.isGrouped) {\n          if (shouldExist) {\n            newSelectedRowIds[id] = true;\n          } else {\n            delete newSelectedRowIds[id];\n          }\n        }\n\n        if (selectSubRows && getSubRows(row)) {\n          return getSubRows(row).forEach(function (row) {\n            return handleRowById(row.id);\n          });\n        }\n      };\n\n      handleRowById(id);\n      return _extends({}, state, {\n        selectedRowIds: newSelectedRowIds\n      });\n    }\n\n    if (action.type === actions.toggleAllPageRowsSelected) {\n      var _setSelected2 = action.value;\n\n      var page = instance.page,\n          _rowsById2 = instance.rowsById,\n          _instance$selectSubRo2 = instance.selectSubRows,\n          _selectSubRows = _instance$selectSubRo2 === void 0 ? true : _instance$selectSubRo2,\n          isAllPageRowsSelected = instance.isAllPageRowsSelected,\n          _getSubRows = instance.getSubRows;\n\n      var _selectAll = typeof _setSelected2 !== 'undefined' ? _setSelected2 : !isAllPageRowsSelected;\n\n      var _newSelectedRowIds = _extends({}, state.selectedRowIds);\n\n      var _handleRowById = function _handleRowById(id) {\n        var row = _rowsById2[id];\n\n        if (!row.isGrouped) {\n          if (_selectAll) {\n            _newSelectedRowIds[id] = true;\n          } else {\n            delete _newSelectedRowIds[id];\n          }\n        }\n\n        if (_selectSubRows && _getSubRows(row)) {\n          return _getSubRows(row).forEach(function (row) {\n            return _handleRowById(row.id);\n          });\n        }\n      };\n\n      page.forEach(function (row) {\n        return _handleRowById(row.id);\n      });\n      return _extends({}, state, {\n        selectedRowIds: _newSelectedRowIds\n      });\n    }\n\n    return state;\n  }\n\n  function useInstance$8(instance) {\n    var data = instance.data,\n        rows = instance.rows,\n        getHooks = instance.getHooks,\n        plugins = instance.plugins,\n        rowsById = instance.rowsById,\n        _instance$nonGroupedR2 = instance.nonGroupedRowsById,\n        nonGroupedRowsById = _instance$nonGroupedR2 === void 0 ? rowsById : _instance$nonGroupedR2,\n        _instance$autoResetSe = instance.autoResetSelectedRows,\n        autoResetSelectedRows = _instance$autoResetSe === void 0 ? true : _instance$autoResetSe,\n        selectedRowIds = instance.state.selectedRowIds,\n        _instance$selectSubRo3 = instance.selectSubRows,\n        selectSubRows = _instance$selectSubRo3 === void 0 ? true : _instance$selectSubRo3,\n        dispatch = instance.dispatch,\n        page = instance.page,\n        getSubRows = instance.getSubRows;\n    ensurePluginOrder(plugins, ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'], 'useRowSelect');\n    var selectedFlatRows = React.useMemo(function () {\n      var selectedFlatRows = [];\n      rows.forEach(function (row) {\n        var isSelected = selectSubRows ? getRowIsSelected(row, selectedRowIds, getSubRows) : !!selectedRowIds[row.id];\n        row.isSelected = !!isSelected;\n        row.isSomeSelected = isSelected === null;\n\n        if (isSelected) {\n          selectedFlatRows.push(row);\n        }\n      });\n      return selectedFlatRows;\n    }, [rows, selectSubRows, selectedRowIds, getSubRows]);\n    var isAllRowsSelected = Boolean(Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length);\n    var isAllPageRowsSelected = isAllRowsSelected;\n\n    if (isAllRowsSelected) {\n      if (Object.keys(nonGroupedRowsById).some(function (id) {\n        return !selectedRowIds[id];\n      })) {\n        isAllRowsSelected = false;\n      }\n    }\n\n    if (!isAllRowsSelected) {\n      if (page && page.length && page.some(function (_ref5) {\n        var id = _ref5.id;\n        return !selectedRowIds[id];\n      })) {\n        isAllPageRowsSelected = false;\n      }\n    }\n\n    var getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetSelectedRows()) {\n        dispatch({\n          type: actions.resetSelectedRows\n        });\n      }\n    }, [dispatch, data]);\n    var toggleAllRowsSelected = React.useCallback(function (value) {\n      return dispatch({\n        type: actions.toggleAllRowsSelected,\n        value: value\n      });\n    }, [dispatch]);\n    var toggleAllPageRowsSelected = React.useCallback(function (value) {\n      return dispatch({\n        type: actions.toggleAllPageRowsSelected,\n        value: value\n      });\n    }, [dispatch]);\n    var toggleRowSelected = React.useCallback(function (id, value) {\n      return dispatch({\n        type: actions.toggleRowSelected,\n        id: id,\n        value: value\n      });\n    }, [dispatch]);\n    var getInstance = useGetLatest(instance);\n    var getToggleAllRowsSelectedProps = makePropGetter(getHooks().getToggleAllRowsSelectedProps, {\n      instance: getInstance()\n    });\n    var getToggleAllPageRowsSelectedProps = makePropGetter(getHooks().getToggleAllPageRowsSelectedProps, {\n      instance: getInstance()\n    });\n    Object.assign(instance, {\n      selectedFlatRows: selectedFlatRows,\n      isAllRowsSelected: isAllRowsSelected,\n      isAllPageRowsSelected: isAllPageRowsSelected,\n      toggleRowSelected: toggleRowSelected,\n      toggleAllRowsSelected: toggleAllRowsSelected,\n      getToggleAllRowsSelectedProps: getToggleAllRowsSelectedProps,\n      getToggleAllPageRowsSelectedProps: getToggleAllPageRowsSelectedProps,\n      toggleAllPageRowsSelected: toggleAllPageRowsSelected\n    });\n  }\n\n  function prepareRow$3(row, _ref6) {\n    var instance = _ref6.instance;\n\n    row.toggleRowSelected = function (set) {\n      return instance.toggleRowSelected(row.id, set);\n    };\n\n    row.getToggleRowSelectedProps = makePropGetter(instance.getHooks().getToggleRowSelectedProps, {\n      instance: instance,\n      row: row\n    });\n  }\n\n  function getRowIsSelected(row, selectedRowIds, getSubRows) {\n    if (selectedRowIds[row.id]) {\n      return true;\n    }\n\n    var subRows = getSubRows(row);\n\n    if (subRows && subRows.length) {\n      var allChildrenSelected = true;\n      var someSelected = false;\n      subRows.forEach(function (subRow) {\n        // Bail out early if we know both of these\n        if (someSelected && !allChildrenSelected) {\n          return;\n        }\n\n        if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n          someSelected = true;\n        } else {\n          allChildrenSelected = false;\n        }\n      });\n      return allChildrenSelected ? true : someSelected ? null : false;\n    }\n\n    return false;\n  }\n\n  var defaultInitialRowStateAccessor = function defaultInitialRowStateAccessor(row) {\n    return {};\n  };\n\n  var defaultInitialCellStateAccessor = function defaultInitialCellStateAccessor(cell) {\n    return {};\n  }; // Actions\n\n\n  actions.setRowState = 'setRowState';\n  actions.setCellState = 'setCellState';\n  actions.resetRowState = 'resetRowState';\n\n  var useRowState = function useRowState(hooks) {\n    hooks.stateReducers.push(reducer$9);\n    hooks.useInstance.push(useInstance$9);\n    hooks.prepareRow.push(prepareRow$4);\n  };\n\n  useRowState.pluginName = 'useRowState';\n\n  function reducer$9(state, action, previousState, instance) {\n    var _instance$initialRowS = instance.initialRowStateAccessor,\n        initialRowStateAccessor = _instance$initialRowS === void 0 ? defaultInitialRowStateAccessor : _instance$initialRowS,\n        _instance$initialCell = instance.initialCellStateAccessor,\n        initialCellStateAccessor = _instance$initialCell === void 0 ? defaultInitialCellStateAccessor : _instance$initialCell,\n        rowsById = instance.rowsById;\n\n    if (action.type === actions.init) {\n      return _extends({\n        rowState: {}\n      }, state);\n    }\n\n    if (action.type === actions.resetRowState) {\n      return _extends({}, state, {\n        rowState: instance.initialState.rowState || {}\n      });\n    }\n\n    if (action.type === actions.setRowState) {\n      var _extends2;\n\n      var rowId = action.rowId,\n          value = action.value;\n      var oldRowState = typeof state.rowState[rowId] !== 'undefined' ? state.rowState[rowId] : initialRowStateAccessor(rowsById[rowId]);\n      return _extends({}, state, {\n        rowState: _extends({}, state.rowState, (_extends2 = {}, _extends2[rowId] = functionalUpdate(value, oldRowState), _extends2))\n      });\n    }\n\n    if (action.type === actions.setCellState) {\n      var _oldRowState$cellStat, _rowsById$_rowId, _rowsById$_rowId$cell, _extends3, _extends4;\n\n      var _rowId = action.rowId,\n          columnId = action.columnId,\n          _value = action.value;\n\n      var _oldRowState = typeof state.rowState[_rowId] !== 'undefined' ? state.rowState[_rowId] : initialRowStateAccessor(rowsById[_rowId]);\n\n      var oldCellState = typeof (_oldRowState == null ? void 0 : (_oldRowState$cellStat = _oldRowState.cellState) == null ? void 0 : _oldRowState$cellStat[columnId]) !== 'undefined' ? _oldRowState.cellState[columnId] : initialCellStateAccessor((_rowsById$_rowId = rowsById[_rowId]) == null ? void 0 : (_rowsById$_rowId$cell = _rowsById$_rowId.cells) == null ? void 0 : _rowsById$_rowId$cell.find(function (cell) {\n        return cell.column.id === columnId;\n      }));\n      return _extends({}, state, {\n        rowState: _extends({}, state.rowState, (_extends4 = {}, _extends4[_rowId] = _extends({}, _oldRowState, {\n          cellState: _extends({}, _oldRowState.cellState || {}, (_extends3 = {}, _extends3[columnId] = functionalUpdate(_value, oldCellState), _extends3))\n        }), _extends4))\n      });\n    }\n  }\n\n  function useInstance$9(instance) {\n    var _instance$autoResetRo = instance.autoResetRowState,\n        autoResetRowState = _instance$autoResetRo === void 0 ? true : _instance$autoResetRo,\n        data = instance.data,\n        dispatch = instance.dispatch;\n    var setRowState = React.useCallback(function (rowId, value) {\n      return dispatch({\n        type: actions.setRowState,\n        rowId: rowId,\n        value: value\n      });\n    }, [dispatch]);\n    var setCellState = React.useCallback(function (rowId, columnId, value) {\n      return dispatch({\n        type: actions.setCellState,\n        rowId: rowId,\n        columnId: columnId,\n        value: value\n      });\n    }, [dispatch]);\n    var getAutoResetRowState = useGetLatest(autoResetRowState);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetRowState()) {\n        dispatch({\n          type: actions.resetRowState\n        });\n      }\n    }, [data]);\n    Object.assign(instance, {\n      setRowState: setRowState,\n      setCellState: setCellState\n    });\n  }\n\n  function prepareRow$4(row, _ref) {\n    var instance = _ref.instance;\n    var _instance$initialRowS2 = instance.initialRowStateAccessor,\n        initialRowStateAccessor = _instance$initialRowS2 === void 0 ? defaultInitialRowStateAccessor : _instance$initialRowS2,\n        _instance$initialCell2 = instance.initialCellStateAccessor,\n        initialCellStateAccessor = _instance$initialCell2 === void 0 ? defaultInitialCellStateAccessor : _instance$initialCell2,\n        rowState = instance.state.rowState;\n\n    if (row) {\n      row.state = typeof rowState[row.id] !== 'undefined' ? rowState[row.id] : initialRowStateAccessor(row);\n\n      row.setState = function (updater) {\n        return instance.setRowState(row.id, updater);\n      };\n\n      row.cells.forEach(function (cell) {\n        if (!row.state.cellState) {\n          row.state.cellState = {};\n        }\n\n        cell.state = typeof row.state.cellState[cell.column.id] !== 'undefined' ? row.state.cellState[cell.column.id] : initialCellStateAccessor(cell);\n\n        cell.setState = function (updater) {\n          return instance.setCellState(row.id, cell.column.id, updater);\n        };\n      });\n    }\n  }\n\n  actions.resetColumnOrder = 'resetColumnOrder';\n  actions.setColumnOrder = 'setColumnOrder';\n\n  var useColumnOrder = function useColumnOrder(hooks) {\n    hooks.stateReducers.push(reducer$a);\n    hooks.visibleColumnsDeps.push(function (deps, _ref) {\n      var instance = _ref.instance;\n      return [].concat(deps, [instance.state.columnOrder]);\n    });\n    hooks.visibleColumns.push(visibleColumns$2);\n    hooks.useInstance.push(useInstance$a);\n  };\n\n  useColumnOrder.pluginName = 'useColumnOrder';\n\n  function reducer$a(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        columnOrder: []\n      }, state);\n    }\n\n    if (action.type === actions.resetColumnOrder) {\n      return _extends({}, state, {\n        columnOrder: instance.initialState.columnOrder || []\n      });\n    }\n\n    if (action.type === actions.setColumnOrder) {\n      return _extends({}, state, {\n        columnOrder: functionalUpdate(action.columnOrder, state.columnOrder)\n      });\n    }\n  }\n\n  function visibleColumns$2(columns, _ref2) {\n    var columnOrder = _ref2.instance.state.columnOrder; // If there is no order, return the normal columns\n\n    if (!columnOrder || !columnOrder.length) {\n      return columns;\n    }\n\n    var columnOrderCopy = [].concat(columnOrder); // If there is an order, make a copy of the columns\n\n    var columnsCopy = [].concat(columns); // And make a new ordered array of the columns\n\n    var columnsInOrder = []; // Loop over the columns and place them in order into the new array\n\n    var _loop = function _loop() {\n      var targetColumnId = columnOrderCopy.shift();\n      var foundIndex = columnsCopy.findIndex(function (d) {\n        return d.id === targetColumnId;\n      });\n\n      if (foundIndex > -1) {\n        columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0]);\n      }\n    };\n\n    while (columnsCopy.length && columnOrderCopy.length) {\n      _loop();\n    } // If there are any columns left, add them to the end\n\n\n    return [].concat(columnsInOrder, columnsCopy);\n  }\n\n  function useInstance$a(instance) {\n    var dispatch = instance.dispatch;\n    instance.setColumnOrder = React.useCallback(function (columnOrder) {\n      return dispatch({\n        type: actions.setColumnOrder,\n        columnOrder: columnOrder\n      });\n    }, [dispatch]);\n  }\n\n  defaultColumn.canResize = true; // Actions\n\n  actions.columnStartResizing = 'columnStartResizing';\n  actions.columnResizing = 'columnResizing';\n  actions.columnDoneResizing = 'columnDoneResizing';\n  actions.resetResize = 'resetResize';\n\n  var useResizeColumns = function useResizeColumns(hooks) {\n    hooks.getResizerProps = [defaultGetResizerProps];\n    hooks.getHeaderProps.push({\n      style: {\n        position: 'relative'\n      }\n    });\n    hooks.stateReducers.push(reducer$b);\n    hooks.useInstance.push(useInstance$b);\n    hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions$1);\n  };\n\n  var defaultGetResizerProps = function defaultGetResizerProps(props, _ref) {\n    var instance = _ref.instance,\n        header = _ref.header;\n    var dispatch = instance.dispatch;\n\n    var onResizeStart = function onResizeStart(e, header) {\n      var isTouchEvent = false;\n\n      if (e.type === 'touchstart') {\n        // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n        if (e.touches && e.touches.length > 1) {\n          return;\n        }\n\n        isTouchEvent = true;\n      }\n\n      var headersToResize = getLeafHeaders(header);\n      var headerIdWidths = headersToResize.map(function (d) {\n        return [d.id, d.totalWidth];\n      });\n      var clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX;\n\n      var dispatchMove = function dispatchMove(clientXPos) {\n        dispatch({\n          type: actions.columnResizing,\n          clientX: clientXPos\n        });\n      };\n\n      var dispatchEnd = function dispatchEnd() {\n        return dispatch({\n          type: actions.columnDoneResizing\n        });\n      };\n\n      var handlersAndEvents = {\n        mouse: {\n          moveEvent: 'mousemove',\n          moveHandler: function moveHandler(e) {\n            return dispatchMove(e.clientX);\n          },\n          upEvent: 'mouseup',\n          upHandler: function upHandler(e) {\n            document.removeEventListener('mousemove', handlersAndEvents.mouse.moveHandler);\n            document.removeEventListener('mouseup', handlersAndEvents.mouse.upHandler);\n            dispatchEnd();\n          }\n        },\n        touch: {\n          moveEvent: 'touchmove',\n          moveHandler: function moveHandler(e) {\n            if (e.cancelable) {\n              e.preventDefault();\n              e.stopPropagation();\n            }\n\n            dispatchMove(e.touches[0].clientX);\n            return false;\n          },\n          upEvent: 'touchend',\n          upHandler: function upHandler(e) {\n            document.removeEventListener(handlersAndEvents.touch.moveEvent, handlersAndEvents.touch.moveHandler);\n            document.removeEventListener(handlersAndEvents.touch.upEvent, handlersAndEvents.touch.moveHandler);\n            dispatchEnd();\n          }\n        }\n      };\n      var events = isTouchEvent ? handlersAndEvents.touch : handlersAndEvents.mouse;\n      var passiveIfSupported = passiveEventSupported() ? {\n        passive: false\n      } : false;\n      document.addEventListener(events.moveEvent, events.moveHandler, passiveIfSupported);\n      document.addEventListener(events.upEvent, events.upHandler, passiveIfSupported);\n      dispatch({\n        type: actions.columnStartResizing,\n        columnId: header.id,\n        columnWidth: header.totalWidth,\n        headerIdWidths: headerIdWidths,\n        clientX: clientX\n      });\n    };\n\n    return [props, {\n      onMouseDown: function onMouseDown(e) {\n        return e.persist() || onResizeStart(e, header);\n      },\n      onTouchStart: function onTouchStart(e) {\n        return e.persist() || onResizeStart(e, header);\n      },\n      style: {\n        cursor: 'col-resize'\n      },\n      draggable: false,\n      role: 'separator'\n    }];\n  };\n\n  useResizeColumns.pluginName = 'useResizeColumns';\n\n  function reducer$b(state, action) {\n    if (action.type === actions.init) {\n      return _extends({\n        columnResizing: {\n          columnWidths: {}\n        }\n      }, state);\n    }\n\n    if (action.type === actions.resetResize) {\n      return _extends({}, state, {\n        columnResizing: {\n          columnWidths: {}\n        }\n      });\n    }\n\n    if (action.type === actions.columnStartResizing) {\n      var clientX = action.clientX,\n          columnId = action.columnId,\n          columnWidth = action.columnWidth,\n          headerIdWidths = action.headerIdWidths;\n      return _extends({}, state, {\n        columnResizing: _extends({}, state.columnResizing, {\n          startX: clientX,\n          headerIdWidths: headerIdWidths,\n          columnWidth: columnWidth,\n          isResizingColumn: columnId\n        })\n      });\n    }\n\n    if (action.type === actions.columnResizing) {\n      var _clientX = action.clientX;\n\n      var _state$columnResizing = state.columnResizing,\n          startX = _state$columnResizing.startX,\n          _columnWidth = _state$columnResizing.columnWidth,\n          _state$columnResizing2 = _state$columnResizing.headerIdWidths,\n          _headerIdWidths = _state$columnResizing2 === void 0 ? [] : _state$columnResizing2;\n\n      var deltaX = _clientX - startX;\n      var percentageDeltaX = deltaX / _columnWidth;\n      var newColumnWidths = {};\n\n      _headerIdWidths.forEach(function (_ref2) {\n        var headerId = _ref2[0],\n            headerWidth = _ref2[1];\n        newColumnWidths[headerId] = Math.max(headerWidth + headerWidth * percentageDeltaX, 0);\n      });\n\n      return _extends({}, state, {\n        columnResizing: _extends({}, state.columnResizing, {\n          columnWidths: _extends({}, state.columnResizing.columnWidths, {}, newColumnWidths)\n        })\n      });\n    }\n\n    if (action.type === actions.columnDoneResizing) {\n      return _extends({}, state, {\n        columnResizing: _extends({}, state.columnResizing, {\n          startX: null,\n          isResizingColumn: null\n        })\n      });\n    }\n  }\n\n  var useInstanceBeforeDimensions$1 = function useInstanceBeforeDimensions(instance) {\n    var flatHeaders = instance.flatHeaders,\n        disableResizing = instance.disableResizing,\n        getHooks = instance.getHooks,\n        columnResizing = instance.state.columnResizing;\n    var getInstance = useGetLatest(instance);\n    flatHeaders.forEach(function (header) {\n      var canResize = getFirstDefined(header.disableResizing === true ? false : undefined, disableResizing === true ? false : undefined, true);\n      header.canResize = canResize;\n      header.width = columnResizing.columnWidths[header.id] || header.originalWidth || header.width;\n      header.isResizing = columnResizing.isResizingColumn === header.id;\n\n      if (canResize) {\n        header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n          instance: getInstance(),\n          header: header\n        });\n      }\n    });\n  };\n\n  function useInstance$b(instance) {\n    var plugins = instance.plugins,\n        dispatch = instance.dispatch,\n        _instance$autoResetRe = instance.autoResetResize,\n        autoResetResize = _instance$autoResetRe === void 0 ? true : _instance$autoResetRe,\n        columns = instance.columns;\n    ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns');\n    var getAutoResetResize = useGetLatest(autoResetResize);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetResize()) {\n        dispatch({\n          type: actions.resetResize\n        });\n      }\n    }, [columns]);\n    var resetResizing = React.useCallback(function () {\n      return dispatch({\n        type: actions.resetResize\n      });\n    }, [dispatch]);\n    Object.assign(instance, {\n      resetResizing: resetResizing\n    });\n  }\n\n  function getLeafHeaders(header) {\n    var leafHeaders = [];\n\n    var recurseHeader = function recurseHeader(header) {\n      if (header.columns && header.columns.length) {\n        header.columns.map(recurseHeader);\n      }\n\n      leafHeaders.push(header);\n    };\n\n    recurseHeader(header);\n    return leafHeaders;\n  }\n\n  var cellStyles = {\n    position: 'absolute',\n    top: 0\n  };\n\n  var useAbsoluteLayout = function useAbsoluteLayout(hooks) {\n    hooks.getTableBodyProps.push(getRowStyles);\n    hooks.getRowProps.push(getRowStyles);\n    hooks.getHeaderGroupProps.push(getRowStyles);\n    hooks.getFooterGroupProps.push(getRowStyles);\n    hooks.getHeaderProps.push(function (props, _ref) {\n      var column = _ref.column;\n      return [props, {\n        style: _extends({}, cellStyles, {\n          left: column.totalLeft + \"px\",\n          width: column.totalWidth + \"px\"\n        })\n      }];\n    });\n    hooks.getCellProps.push(function (props, _ref2) {\n      var cell = _ref2.cell;\n      return [props, {\n        style: _extends({}, cellStyles, {\n          left: cell.column.totalLeft + \"px\",\n          width: cell.column.totalWidth + \"px\"\n        })\n      }];\n    });\n    hooks.getFooterProps.push(function (props, _ref3) {\n      var column = _ref3.column;\n      return [props, {\n        style: _extends({}, cellStyles, {\n          left: column.totalLeft + \"px\",\n          width: column.totalWidth + \"px\"\n        })\n      }];\n    });\n  };\n\n  useAbsoluteLayout.pluginName = 'useAbsoluteLayout';\n\n  var getRowStyles = function getRowStyles(props, _ref4) {\n    var instance = _ref4.instance;\n    return [props, {\n      style: {\n        position: 'relative',\n        width: instance.totalColumnsWidth + \"px\"\n      }\n    }];\n  };\n\n  var cellStyles$1 = {\n    display: 'inline-block',\n    boxSizing: 'border-box'\n  };\n\n  var getRowStyles$1 = function getRowStyles(props, _ref) {\n    var instance = _ref.instance;\n    return [props, {\n      style: {\n        display: 'flex',\n        width: instance.totalColumnsWidth + \"px\"\n      }\n    }];\n  };\n\n  var useBlockLayout = function useBlockLayout(hooks) {\n    hooks.getRowProps.push(getRowStyles$1);\n    hooks.getHeaderGroupProps.push(getRowStyles$1);\n    hooks.getFooterGroupProps.push(getRowStyles$1);\n    hooks.getHeaderProps.push(function (props, _ref2) {\n      var column = _ref2.column;\n      return [props, {\n        style: _extends({}, cellStyles$1, {\n          width: column.totalWidth + \"px\"\n        })\n      }];\n    });\n    hooks.getCellProps.push(function (props, _ref3) {\n      var cell = _ref3.cell;\n      return [props, {\n        style: _extends({}, cellStyles$1, {\n          width: cell.column.totalWidth + \"px\"\n        })\n      }];\n    });\n    hooks.getFooterProps.push(function (props, _ref4) {\n      var column = _ref4.column;\n      return [props, {\n        style: _extends({}, cellStyles$1, {\n          width: column.totalWidth + \"px\"\n        })\n      }];\n    });\n  };\n\n  useBlockLayout.pluginName = 'useBlockLayout';\n\n  function useFlexLayout(hooks) {\n    hooks.getTableProps.push(getTableProps);\n    hooks.getRowProps.push(getRowStyles$2);\n    hooks.getHeaderGroupProps.push(getRowStyles$2);\n    hooks.getFooterGroupProps.push(getRowStyles$2);\n    hooks.getHeaderProps.push(getHeaderProps);\n    hooks.getCellProps.push(getCellProps);\n    hooks.getFooterProps.push(getFooterProps);\n  }\n\n  useFlexLayout.pluginName = 'useFlexLayout';\n\n  var getTableProps = function getTableProps(props, _ref) {\n    var instance = _ref.instance;\n    return [props, {\n      style: {\n        minWidth: instance.totalColumnsMinWidth + \"px\"\n      }\n    }];\n  };\n\n  var getRowStyles$2 = function getRowStyles(props, _ref2) {\n    var instance = _ref2.instance;\n    return [props, {\n      style: {\n        display: 'flex',\n        flex: '1 0 auto',\n        minWidth: instance.totalColumnsMinWidth + \"px\"\n      }\n    }];\n  };\n\n  var getHeaderProps = function getHeaderProps(props, _ref3) {\n    var column = _ref3.column;\n    return [props, {\n      style: {\n        boxSizing: 'border-box',\n        flex: column.totalFlexWidth ? column.totalFlexWidth + \" 0 auto\" : undefined,\n        minWidth: column.totalMinWidth + \"px\",\n        width: column.totalWidth + \"px\"\n      }\n    }];\n  };\n\n  var getCellProps = function getCellProps(props, _ref4) {\n    var cell = _ref4.cell;\n    return [props, {\n      style: {\n        boxSizing: 'border-box',\n        flex: cell.column.totalFlexWidth + \" 0 auto\",\n        minWidth: cell.column.totalMinWidth + \"px\",\n        width: cell.column.totalWidth + \"px\"\n      }\n    }];\n  };\n\n  var getFooterProps = function getFooterProps(props, _ref5) {\n    var column = _ref5.column;\n    return [props, {\n      style: {\n        boxSizing: 'border-box',\n        flex: column.totalFlexWidth ? column.totalFlexWidth + \" 0 auto\" : undefined,\n        minWidth: column.totalMinWidth + \"px\",\n        width: column.totalWidth + \"px\"\n      }\n    }];\n  };\n\n  function useGridLayout(hooks) {\n    hooks.stateReducers.push(reducer$c);\n    hooks.getTableProps.push(getTableProps$1);\n    hooks.getHeaderProps.push(getHeaderProps$1);\n  }\n\n  useGridLayout.pluginName = 'useGridLayout';\n\n  var getTableProps$1 = function getTableProps(props, _ref) {\n    var instance = _ref.instance;\n    return [props, {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: instance.state.gridLayout.columnWidths.map(function (w) {\n          return w;\n        }).join(\" \")\n      }\n    }];\n  };\n\n  var getHeaderProps$1 = function getHeaderProps(props, _ref2) {\n    var column = _ref2.column;\n    return [props, {\n      id: \"header-cell-\" + column.id,\n      style: {\n        position: \"sticky\" //enables a scroll wrapper to be placed around the table and have sticky headers\n\n      }\n    }];\n  };\n\n  function reducer$c(state, action, previousState, instance) {\n    if (action.type === \"init\") {\n      return _extends({\n        gridLayout: {\n          columnWidths: instance.columns.map(function () {\n            return \"auto\";\n          })\n        }\n      }, state);\n    }\n\n    if (action.type === \"columnStartResizing\") {\n      var columnId = action.columnId;\n      var columnIndex = instance.visibleColumns.findIndex(function (col) {\n        return col.id === columnId;\n      });\n      var elWidth = getElementWidth(columnId);\n\n      if (elWidth !== undefined) {\n        return _extends({}, state, {\n          gridLayout: _extends({}, state.gridLayout, {\n            columnId: columnId,\n            columnIndex: columnIndex,\n            startingWidth: elWidth\n          })\n        });\n      } else {\n        return state;\n      }\n    }\n\n    if (action.type === \"columnResizing\") {\n      var _state$gridLayout = state.gridLayout,\n          _columnIndex = _state$gridLayout.columnIndex,\n          startingWidth = _state$gridLayout.startingWidth,\n          columnWidths = _state$gridLayout.columnWidths;\n      var change = state.columnResizing.startX - action.clientX;\n      var newWidth = startingWidth - change;\n      var columnWidthsCopy = [].concat(columnWidths);\n      columnWidthsCopy[_columnIndex] = newWidth + \"px\";\n      return _extends({}, state, {\n        gridLayout: _extends({}, state.gridLayout, {\n          columnWidths: columnWidthsCopy\n        })\n      });\n    }\n  }\n\n  function getElementWidth(columnId) {\n    var _document$getElementB;\n\n    var width = (_document$getElementB = document.getElementById(\"header-cell-\" + columnId)) == null ? void 0 : _document$getElementB.offsetWidth;\n\n    if (width !== undefined) {\n      return width;\n    }\n  }\n\n  exports._UNSTABLE_usePivotColumns = _UNSTABLE_usePivotColumns;\n  exports.actions = actions;\n  exports.defaultColumn = defaultColumn;\n  exports.defaultGroupByFn = defaultGroupByFn;\n  exports.defaultOrderByFn = defaultOrderByFn;\n  exports.defaultRenderer = defaultRenderer;\n  exports.emptyRenderer = emptyRenderer;\n  exports.ensurePluginOrder = ensurePluginOrder;\n  exports.flexRender = flexRender;\n  exports.functionalUpdate = functionalUpdate;\n  exports.loopHooks = loopHooks;\n  exports.makePropGetter = makePropGetter;\n  exports.makeRenderer = makeRenderer;\n  exports.reduceHooks = reduceHooks;\n  exports.safeUseLayoutEffect = safeUseLayoutEffect;\n  exports.useAbsoluteLayout = useAbsoluteLayout;\n  exports.useAsyncDebounce = useAsyncDebounce;\n  exports.useBlockLayout = useBlockLayout;\n  exports.useColumnOrder = useColumnOrder;\n  exports.useExpanded = useExpanded;\n  exports.useFilters = useFilters;\n  exports.useFlexLayout = useFlexLayout;\n  exports.useGetLatest = useGetLatest;\n  exports.useGlobalFilter = useGlobalFilter;\n  exports.useGridLayout = useGridLayout;\n  exports.useGroupBy = useGroupBy;\n  exports.useMountedLayoutEffect = useMountedLayoutEffect;\n  exports.usePagination = usePagination;\n  exports.useResizeColumns = useResizeColumns;\n  exports.useRowSelect = useRowSelect;\n  exports.useRowState = useRowState;\n  exports.useSortBy = useSortBy;\n  exports.useTable = useTable;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"mappings":"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","names":["renderErr","actions","init","defaultRenderer","value","emptyRenderer","React","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","arguments","reduce","props","next","style","className","rest","handlePropGetter","prevProps","userProps","meta","Array","isArray","makePropGetter","hooks","prev","reduceHooks","initial","allowUndefined","nextValue","console","info","Error","loopHooks","context","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","pluginIndex","findIndex","plugin","beforeIndex","before","functionalUpdate","updater","old","useGetLatest","obj","ref","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","useAsyncDebounce","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","args","_args2","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","_context","makeRenderer","instance","column","type","Comp","flexRender","isReactComponent","component","isClassComponent","isExoticComponent","proto","Object","getPrototypeOf","prototype","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","getBy","row","error","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","d","latestParentColumn","reverse","newParent","originalId","placeholderOf","push","length","_loop","pathObjCache","Map","path","def","cacheKey","JSON","stringify","pathObj","get","makePathArray","set","val","cursor","pathPart","e","getFirstDefined","i","isFunction","a","arr","key","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","passiveEventSupported","supported","options","passive","window","addEventListener","removeEventListener","err","reOpenBracket","reCloseBracket","flattenDeep","String","replace","join","newArr","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","should","columnId","shouldAll","isMountedRef","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","useTable","instanceRef","Boolean","data","userColumns","getStateReducer","s","handler","useReducer","undefined","reducerState","useMemo","flatRows","rowsById","allColumnsQueue","shift","accessRowsForColumn","accessValueHooks","initialRows","find","duplicateColumns","all","visibleColumnsDep","sort","calculateHeaderWidths","totalColumnsMinWidth","totalColumnsWidth","totalColumnsMaxWidth","render","footerGroups","allCells","values","cells","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRow","originalRow","rowIndex","parentRows","originalSubRows","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","expandAll","keys","rowId","setExpanded","exists","shouldExist","_","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","expandedDepth","findExpandedDepth","preExpandedRows","maxDepth","splitId","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","nonFilteredColumns","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","stateWithoutGlobalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","minMax","average","median","mid","floor","nums","b","unique","from","Set","uniqueCount","size","count","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","aggregateRowsToValues","leafRows","groupedRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupUpRecursively","parentId","rowGroupsMap","aggregatedGroupedRows","entries","groupByVal","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","isPlaceholder","isAggregated","_row$subRows","resKey","reSplitAlphaNumeric","alphanumeric","rowA","rowB","getRowValuesByColumnID","toString","aa","bb","an","parseInt","bn","combo","isNaN","datetime","getTime","compareBasic","basic","string","alower","blower","number","replaceNonNumeric","row1","row2","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","newSortBy","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","sortAction","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","buildPivotColumns","pivotFilters","pivotColumn","sourceColumn","isPivoted","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","newMaterialized","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","getAutoResetSelectedRows","allChildrenSelected","someSelected","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","_oldRowState$cellStat","_rowsById$_rowId","_rowsById$_rowId$cell","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headersToResize","getLeafHeaders","headerIdWidths","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","deltaX","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","leafHeaders","recurseHeader","cellStyles","top","useAbsoluteLayout","getRowStyles","display","boxSizing","useBlockLayout","useFlexLayout","flex","useGridLayout","gridTemplateColumns","gridLayout","w","columnIndex","elWidth","getElementWidth","startingWidth","change","newWidth","columnWidthsCopy","getElementById","_document$getElementB","offsetWidth"],"sources":["/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/publicUtils.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/utils.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/makeDefaultPluginHooks.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/hooks/useColumnVisibility.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/hooks/useTable.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/plugin-hooks/useExpanded.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/filterTypes.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/plugin-hooks/useFilters.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/plugin-hooks/useGlobalFilter.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/aggregations.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/plugin-hooks/useGroupBy.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/sortTypes.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/plugin-hooks/useSortBy.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/plugin-hooks/usePagination.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/plugin-hooks/_UNSTABLE_usePivotColumns.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/plugin-hooks/useRowSelect.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/plugin-hooks/useRowState.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/plugin-hooks/useColumnOrder.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/plugin-hooks/useResizeColumns.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/plugin-hooks/useAbsoluteLayout.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/plugin-hooks/useBlockLayout.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/plugin-hooks/useFlexLayout.js","/Users/Marion/Desktop/csci335/pyball/prototype/pyball/node_modules/react-table/src/plugin-hooks/useGridLayout.js"],"sourcesContent":["import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}"]},"metadata":{},"sourceType":"script"}